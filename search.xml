<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[Prepare for work]]></title>
    <url>%2F2018%2F09%2F04%2FPrepare-for-work%2F</url>
    <content type="text"><![CDATA[使用软件 vscode phpstudy 下载编辑器 Visual Studio Code 官网下载链接：https://aka.ms/win32-x64-user-stable 服务器 phpstudy 官网下载链接：http://phpstudy.php.cn/phpstudy/PhpStudy20180211.zip 安装略 安装过程简单，一路回车，默认配置，可以修改一下安装路径，然后ok。 注意事项安装完phpstudy 打开后可能会出现 缺少vc库 可自行对应百度下载相应的vc 附件中提供了部分vc库 ps.必须安装32位的运行库 使用双击快捷键打开 emmmm 能打开就差不多了 关于使用 下一节再讲 可以自己摸索摸索 附件Visual Studio Codephpstudy缺少vc9时 x86缺少vc11时 x86缺少vc14时 x86]]></content>
      <categories>
        <category>PHP学习</category>
      </categories>
      <tags>
        <tag>安装与配置</tag>
        <tag>PHP</tag>
        <tag>vscode</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[eclipse环境下如何配置tomcat]]></title>
    <url>%2F2018%2F08%2F20%2FHow-to-configure-Tomcat-in-eclipse-environment%2F</url>
    <content type="text"><![CDATA[开了虚拟机 弄了下基本的安装 在下还是萌新 解释可能没有太详细 配置必备 JDKEclipseTomcat 安装简介jdk 一路next 直接默认的没问题eclipse 选择java_ee 选择路径 okTomcat 无太大操作空间 可以直接一路默认 Eclipse安装图解真的默认 无 Eclipse安装图解 Tomcat安装图解 配置配置TomcatWindow –&gt; Preferences –&gt; Server –&gt; Runtime Environment –&gt; Add Add你的Tomcat 选择你的版本 我的版本是v9.0 Next 选择你的安装路径 选择jdk版本 一般情况下 这个是系统默认的 这里为了一些后续方便 Workbench default JRE Add你的jdk 我的jdk版本是v9.0.1 选择你的安装路径 ok 搞定 部署新建项目File –&gt; New –&gt; Other –&gt; web –&gt;Dynamic Web Project 设置项目名 这里可以不用管 这个时候我们需要看到我们的server 部署server 将之前创建的Test项目add到 server 启动 server可以右键 也可以直接点击这个绿色启动键 设置主界面indexTest –&gt; Webcontent (之前自己设置的，这是默认的) –&gt; index.jsp 123456789101112&lt;!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"&gt;&lt;html&gt;&lt;head&gt;&lt;%@ page language="java" contentType="text/html; charset=UTF-8" pageEncoding="UTF-8"%&gt;&lt;meta http-equiv="Content-Type" content="text/html; charset=UTF-8"&gt;&lt;title&gt;在此处插入标题&lt;/title&gt;&lt;/head&gt;&lt;body&gt;helloworld&lt;/body&gt;&lt;/html&gt; Ctrl+F11 ok 打开了内置的浏览器 运行成功或者手动打开浏览器http://localhost:8080/Test/ Others这里也可以修改path设置成Tomcat的目录 (了解一下) 原 改]]></content>
      <categories>
        <category>Java Web学习</category>
      </categories>
      <tags>
        <tag>安装与配置</tag>
        <tag>Java</tag>
        <tag>Eclipse</tag>
        <tag>Java EE</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[STL之Vector函数]]></title>
    <url>%2F2018%2F08%2F13%2FSTL-vector-function%2F</url>
    <content type="text"><![CDATA[感谢百度各位大佬的指点https://blog.csdn.net/yjunyu/article/details/77728410?locationNum=10&amp;fps=1 萌新表示需要百度的指点 ~!@#$%^&amp;*()_+ 介绍向量 vector 是一种对象实体, 能够容纳许多其他类型相同的元素, 因此又被称为容器。 与string相同, vector 同属于STL(Standard Template Library, 标准模板库)中的一种自定义的数据类型, 可以广义上认为是数组的增强版。 ok 简单说 动态数组 定义及使用头文件12#include&lt;vector&gt;using namespace std; //vector属于std命名域 定义变量1234567// using namespace std;using std::vector; //将std中的vector 特地指出来vector&lt;int&gt; v; //一维数组vector&lt;vector&lt;int&gt; &gt;v; //二维数组 注意有个空格方便区分//全名定义std::vector&lt;int&gt; v; 初始化一维数组带参数的构造函数初始化12//初始化一个size为0的vectorvector&lt;int&gt; v; 带参数的构造函数初始化1234//初始化size,但每个元素值为默认值vector&lt;int&gt; v(10); //初始化了10个默认值为0的元素//初始化size,并且设置初始值vector&lt;int&gt; v(10,1); //初始化了10个值为1的元素 通过数组地址初始化123int a[5] = &#123;1,2,3,4,5&#125;;//通过数组a的地址初始化，注意地址是从0到5（左闭右开区间）vector&lt;int&gt; b(a, a+5); 通过同类型的vector初始化123vector&lt;int&gt; a(5,1);//通过a初始化vector&lt;int&gt; b(a); 通过insert初始化123456789101112131415//insert初始化方式将同类型的迭代器对应的始末区间（左闭右开区间）内的值插入到vector中vector&lt;int&gt; a(6,6);vecot&lt;int&gt; b;//将a[0]~a[2]插入到b中，b.size()由0变为3b.insert(b.begin(), a.begin(), a.begin() + 3);insert也可通过数组地址区间实现插入int a[6] = &#123;6,6,6,6,6,6&#125;;vector&lt;int&gt; b;//将a的所有元素插入到b中b.insert(b.begin(), a, a+7);此外，insert还可以插入m个值为n的元素//在b开始位置处插入6个6b.insert(b.begin(), 6, 6); 通过copy函数赋值123456789vector&lt;int&gt; a(5,1);int a1[5] = &#123;2,2,2,2,2&#125;;vector&lt;int&gt; b(10);/*将a中元素全部拷贝到b开始的位置中,注意拷贝的区间为a.begin() ~ a.end()的左闭右开的区间*/copy(a.begin(), a.end(), b.begin());//拷贝区间也可以是数组地址构成的区间copy(a1, a1+5, b.begin() + 5); 二维数组 首先，需要明确的是，在计算机的世界中，根本不存在二维数组，只是使用者的一个概念罢了。其实我们所谓的二维数组也必须是一段连续的内存,由于计算机的内存是一维的，多维数组的元素应排成线性序列后存入存储器。所以采用顺序存储方法表示数组。 方法一12345678910vector&lt;vector&lt;int&gt; &gt; array; //这个m一定不能少//初始化一个m*n的二维数组for(int i=0;i&lt;m;i++) &#123; array.push_back(vector&lt;int&gt;());&#125;for (int i=0;i&lt;array.size();i++)&#123; for (int j=0;j&lt;n;j++)&#123; array[i].push_back(j); &#125; &#125; 方法二12345vector&lt;vector&lt;int&gt; &gt; array(m); //这个m一定不能少//初始化一个m*n的二维数组for(int i=0;i&lt;n;i++) &#123; array[i].resize(0);&#125; 方法三1vector&lt;vector&lt;int&gt; &gt; array(m ,vector&lt;int&gt;(n)); //m*n的二维vector vector 容器与数组相比其优点在于它能够根据需要随时自动调整自身的大小以便容下所要放入的元素。此外, vector 也提供了许多的方法来对自身进行操作。 Vector常用函数表 函数 描述 v.assign(begin,end) v.assign(n,elem) 将[begin; end)区间中的数据赋值给v 将n个elem的拷贝赋值给v at(index) 传回索引index所指的数据 如果index越界 抛出out_of_range back() 传回最后一个数据 不检查这个数据是否存在 begin() 传回迭代器中的第一个数据地址 数组的首元素地址 capacity() 返回容器中数据个数 clear() 移除容器中所有数据 empty() 判断容器是否为空 为空时返回真 否则返回假 end() 指向迭代器中末端元素的下一个 指向一个不存在元素 erase(pos) 删除pos位置的数据 传回下一个数据的位置 erase(begin,end) 删除[begin,end)区间的数据 传回下一个数据的位置 front() 传回第一个数据 get_allocator 使用构造函数返回一个拷贝 insert(pos,elem) 在pos位置插入一个elem拷贝 传回新数据位置 insert(pos,n,elem) 在pos位置插入n个elem数据。无返回值 insert(pos,begin,end) 在pos位置插入在[begin,end)区间的数据 无返回值 max_size() 返回容器中最大数据的数量 pop_back() 删除最后一个数据 push_back(elem) 在尾部加入一个数据 rbegin() 传回一个逆向队列的第一个数据 rend() 传回一个逆向队列的最后一个数据的下一个位置 resize(num) 重新指定队列的长度 reserve() 保留适当的容量 size() 返回容器中实际数据的个数 a.swap(b) swap(a,b) 将a和b元素互换 operator[] 返回容器中指定位置的一个引用]]></content>
      <categories>
        <category>C++学习</category>
      </categories>
      <tags>
        <tag>C++</tag>
        <tag>STL</tag>
        <tag>Vector</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[记一次suda框架之宿舍管理系统]]></title>
    <url>%2F2018%2F08%2F12%2FSuda-apartment-management-system%2F</url>
    <content type="text"><![CDATA[宿舍管理系统两个网站及其所需模块 用户中心网站 support, user-center-server 选宿舍网站 support,user-center-client,apartment 准备两个文件夹 里面有suda、public 使用phpstudy 配置两个站点 网站目都是public 进入网站刷新一下 两个文件夹都出现app文件夹 这里可以考虑将data文件删了….反正是数据文件，会自动更新，app/modules/..的app文件也可删了，因为用不上了 启动模块用户中心的模块 support, user-center-server 宿舍系统的模块 support,user-center-client,apartment 数据库分类为什么分类呢 方便管理修改用户中心的数据库 库名看自己 修改宿舍系统的数据库 库名看自己 进入用户中心http://用户中心的网址/dev.php/setting 关于输入密码问题 mod修改后 首次进入自动登入 这里可以略了 输入密码管理员账号为-u root -p root-u dxkite -p dxkite两个都可以 添加网站的一系列操作 把宿舍选择的那个网站添加进来 这个东西呢 在宿舍系统中可以看到 (最新mod)12http://选宿舍的网址/dev.php/oauth-client/callbackhttp://选宿舍的网址/dev.php/api/oauth/user-client 进入宿舍系统http://选宿舍的网址/dev.php/setting 在最新mod中 这里会显示 回调地址 和API接口 修改信息，内容来自之前用户中心网站信息 注意点击修改 以上为这个的基本配置 导入数据 测试啊 什么什么的就没我的事了 有关于模块之类的东西 可以去群里也可以直接去会长大大的GitHub吧…会长的GitHub应该放了吧…啊哈哈哈我不清楚https://github.com/DXkite]]></content>
      <categories>
        <category>Suda框架学习</category>
      </categories>
      <tags>
        <tag>Suda</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[记一次suda框架之简单成绩系统]]></title>
    <url>%2F2018%2F08%2F10%2FSuda-performance-statistics-system%2F</url>
    <content type="text"><![CDATA[创建一个项目作为一个萌新 对创建一个新项目后 对项目的结构可能会有所陌生 不知道该有什么 所以这里可以复制之前的项目 简单的说就是复制一个app文件夹 然后改名为statistical 关于里面的内容 ./resoure 目录下 ./config/router.json # 路由文件内容当然要清理./template/defalut/ # 因为你需要新写入模板 所以该目录下的模板建议删了 ./share 目录下 ./table/ #库文件 因为你可能不适用这些 所以删了 ./src 目录下 ./ #响应文件 差不多是与模板对应的 所以删了 ./module.json #模板的配置文件 所以内筒清理 关于data文件 data是自动生成的 所以 为了防止之前执行的东东 影响本次 所以 删了 目录结构 ps.为啥这里我不适用那个高逼格的制表符 是因为没用过 不会用… 大佬语录 template 下的是模板文件src的文件是页面响应文件share的文件是库文件 设置配置文件模板配置 module.json12345678910111213141516171819&#123; "name": "dxkite/statistical", "namespace": "dxkite/statistical", "authors": [&#123; "name": "dxkite", "email": "dxkite@qq.com" &#125;], "import": &#123; "share": &#123; "dxkite\\statistical": "share" &#125;, "src": &#123; "dxkite\\statistical\\response": "src" &#125; &#125;, "discription": "DXkite的成绩统计模块", "require": &#123;&#125;, "version": "1.0.0"&#125; 启用模块 manifast.json1234567891011121314&#123; "name": "dxkite-statistical-app", "namespace": "dxkite\\statistical", "version": "1.0-dev", "application": "suda\\core\\Application", "modules": ["suda", "statistical"], "reachable": ["statistical"], "language": "zh-CN", "url": &#123; "mode": 0, "beautify": true, "rewrite": true &#125;&#125; 表单配置 statistic.json12345678910111213141516171819202122232425262728&#123; "table_id_1": &#123; "name": "学生XXX统计表", "fields": &#123; "math": &#123; "name": "数学成绩", "type": "number" &#125;, "english": &#123; "name": "英语成绩", "type": "number" &#125; &#125; &#125;, "table_id_2": &#123; "name": "学生XXX统计表-2", "fields": &#123; "math": &#123; "name": "数学成绩", "type": "number" &#125;, "english": &#123; "name": "英语成绩", "type": "number" &#125; &#125; &#125;&#125; 路由配置 router.json1234567891011121314&#123; "index": &#123; "url": "\/", "class": "dxkite\\statistical\\response\\IndexResponse" &#125;, "table": &#123; "url": "\/&#123;table_id:string&#125;", "class": "dxkite\\statistical\\response\\TableResponse" &#125;, "download": &#123; "url": "\/&#123;table_id:string&#125;\/download", "class": "dxkite\\statistical\\response\\DownloadResponse" &#125;&#125; 案例分析请移步 会长文章 模板及响应文件StatisticTable.php这是放在 ./share/table 目录下的 相当于库文件吧 12345678910111213141516171819202122232425262728&lt;?phpnamespace dxkite\statistical\table;class StatisticTable extends \suda\archive\Table &#123; public function __construct()&#123; // 数据表名 parent::__construct('statistic'); &#125; protected function onBuildCreator($table)&#123; $table-&gt;fields( $table-&gt;field('id','bigint',20)-&gt;primary()-&gt;auto()-&gt;comment('自动增长ID'), $table-&gt;field('student_id','varchar',80)-&gt;key()-&gt;comment('学号'), $table-&gt;field('table_id','varchar',80)-&gt;key()-&gt;comment('姓名'), $table-&gt;field('name','varchar',80), $table-&gt;field('data','text') ); return $table; &#125; protected function _inputDataField($data)&#123; return serialize($data); &#125; protected function _outputDataField($data)&#123; return unserialize($data); &#125;&#125; index.tpl.html你可能需要一个index 这个界面可以自己制作一个&lt;table&gt;需要注意的地方就是 url的生成方式 也可以参考我的 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950&lt;!DOCTYPE html&gt;&lt;html lang="en"&gt;&lt;head&gt; &lt;meta charset="UTF-8"&gt; &lt;meta name="viewport" content="width=device-width, initial-scale=1.0"&gt; &lt;meta http-equiv="X-UA-Compatible" content="ie=edge"&gt; &lt;title&gt;Index - 备选表单&lt;/title&gt;&lt;/head&gt;&lt;body&gt; &lt;table&gt; &lt;tr&gt; &lt;th&gt; ID &lt;/th&gt; &lt;th&gt; 名称 &lt;/th&gt; &lt;th&gt; 操作 &lt;/th&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt; table_id_1 &lt;/td&gt; &lt;td&gt; 学生XXX统计表 &lt;/td&gt; &lt;td&gt; &lt;a href="@u('table', 'table_id_1' )"&gt;填写&lt;/a&gt; &lt;a href="@u('download','table_id_1')"&gt;下载&lt;/a&gt; &lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt; table_id_2 &lt;/td&gt; &lt;td&gt; 学生XXX统计表-2 &lt;/td&gt; &lt;td&gt; &lt;a href="@u('table', 'table_id_2' )"&gt;填写&lt;/a&gt; &lt;a href="@u('download','table_id_2')"&gt;下载&lt;/a&gt; &lt;/td&gt; &lt;/tr&gt; &lt;/table&gt;&lt;/body&gt;&lt;/html&gt; TableResponse.php &amp;&amp; table.tpl.html下面的这个代码 的作用是 你在url里输入什么 他就会返回什么 纯属好玩 给你玩玩的 应该放在 index之前的 因为index弄好后会有连接 难免会手痒点两下 TableResponse.php123456789101112&lt;?phpnamespace dxkite\statistical\response;use suda\core\Request;class TableResponse extends \suda\core\Response&#123; public function onRequest(Request $request) &#123; echo $request-&gt;get('table_id'); &#125;&#125; table.tpl.htmltable的模板设计1234567891011121314151617181920212223242526272829303132333435363738394041424344454647&lt;!DOCTYPE html&gt;&lt;html lang="en"&gt;&lt;head&gt; &lt;meta charset="UTF-8"&gt; &lt;meta name="viewport" content="width=device-width, initial-scale=1.0"&gt; &lt;meta http-equiv="X-UA-Compatible" content="ie=edge"&gt; &lt;title&gt;&#123;&#123;$:name&#125;&#125; - 填写表单&lt;/title&gt;&lt;/head&gt;&lt;body&gt; &lt;h3&gt;&#123;&#123;$:name&#125;&#125;&lt;/h3&gt; &lt;form action="@u" method="post"&gt; &lt;table&gt; &lt;tr&gt; &lt;th&gt;姓名&lt;/th&gt; &lt;td&gt; &lt;input type="text" name="name" /&gt; &lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;th&gt;学号&lt;/th&gt; &lt;td&gt; &lt;input type="text" name="number" /&gt; &lt;/td&gt; &lt;/tr&gt; @foreach ($:fields as $id =&gt; $field) &lt;tr&gt; &lt;th&gt;&#123;&#123;$field['name']&#125;&#125;&lt;/th&gt; &lt;td&gt; @if ($field['type'] == 'text') &lt;textarea name="data[&#123;&#123;$id&#125;&#125;]" cols="30" rows="10" required&gt;&lt;/textarea&gt; @elseif ($field['type'] == 'number') &lt;input type="number" name="data[&#123;&#123;$id&#125;&#125;]" required&gt; @else &lt;input type="text" name="data[&#123;&#123;$id&#125;&#125;]" required&gt; @endif &lt;/td&gt; @endforeach &lt;/tr&gt; &lt;/table&gt; &lt;button&gt;提交&lt;/button&gt;&lt;/form&gt;&lt;/body&gt;&lt;/html&gt; TableResponse.php完善过后一次的响应文件123456789101112131415161718192021222324&lt;?phpnamespace dxkite\statistical\response;use suda\core\Request;class TableResponse extends \suda\core\Response&#123; public function onRequest(Request $request) &#123; $tables = app()-&gt;getModuleConfig(app()-&gt;getFileModule(__FILE__), 'statistic'); $tableId = $request-&gt;get('table_id'); // 判断是否存在ID if (isset($tables[$tableId])) &#123; $view = $this-&gt;page('table'); $view-&gt;set('fields',$tables[$tableId]['fields']); $view-&gt;set('name',$tables[$tableId]['name']); $view-&gt;render(); &#125; else &#123; // 显示404界面 hook()-&gt;exec('system:404'); &#125; &#125;&#125; TableResponse.php再次升级 新增写入数据你可能需要一个state.tpl.html后面有 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576&lt;?phpnamespace dxkite\statistical\response;use suda\core\Request;class TableResponse extends \suda\core\Response&#123; public function onRequest(Request $request) &#123; $tables = app()-&gt;getModuleConfig(app()-&gt;getFileModule(__FILE__), 'statistic'); $tableId = $request-&gt;get('table_id'); // 判断是否存在ID if (isset($tables[$tableId])) &#123; if ($request-&gt;hasPost()) &#123; // 显示结果页面 $view = $this-&gt;page('state'); if ($type = $this-&gt;insertData($tableId, $request)) &#123; if ($type == 1) &#123; $view-&gt;set('message','写入成功'); &#125; else &#123; $view-&gt;set('message','数据未更新'); &#125; &#125; else &#123; $view-&gt;set('message','写入失败'); &#125; $view-&gt;render(); &#125; else &#123; $view = $this-&gt;page('table'); $view-&gt;set('fields', $tables[$tableId]['fields']); $view-&gt;set('name', $tables[$tableId]['name']); $view-&gt;render(); &#125; &#125; else &#123; // 显示404界面 hook()-&gt;exec('system:404'); &#125; &#125; public function insertData(string $tableId, Request $request): int &#123; $table = new \dxkite\statistical\table\StatisticTable; if ($request-&gt;post('name', null) &amp;&amp; $request-&gt;post('number', null) &amp;&amp; $request-&gt;post('data', null)) &#123; // 查询条件 $where = [ 'table_id' =&gt; $tableId, 'student_id' =&gt; $request-&gt;post('number') ]; // 如果存在学号相同，则更新记录 // 根据ID更新会更快 if ($data = $table-&gt;select(['id'],$where)-&gt;fetch()) &#123; if ($table-&gt;updateByPrimaryKey($data['id'], [ 'name' =&gt; $request-&gt;post('name'), 'data' =&gt; $request-&gt;post('data') ])) &#123; // 更新成功 return 1; &#125; else &#123; // 未跟新 return 2; &#125; &#125; else &#123; // 插入新记录 $id = $table-&gt;insert([ 'table_id' =&gt; $tableId, 'student_id' =&gt; $request-&gt;post('number'), 'name' =&gt; $request-&gt;post('name'), 'data' =&gt; $request-&gt;post('data'), ]); if ($id &gt; 0) &#123; return 1; &#125; &#125; &#125; return 0; &#125;&#125; DownloadResponse.php下载有两个版本 非密码版本1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859&lt;?phpnamespace dxkite\statistical\response;use suda\core\Request;class DownloadResponse extends \suda\core\Response&#123; public function onRequest(Request $request) &#123; $tables = app()-&gt;getModuleConfig(app()-&gt;getFileModule(__FILE__), 'statistic'); $tableId = $request-&gt;get('table_id'); // 判断是否存在ID if (isset($tables[$tableId])) &#123; $data = $this-&gt;exportData($tableId, $tables[$tableId]['fields']); // 暂存文件 $path = RUNTIME_DIR .'/'. $tableId .'.csv'; storage()-&gt;put($path,$data); // 生成文件下载 $this-&gt;file($path); &#125; else &#123; // 显示404界面 hook()-&gt;exec('system:404'); &#125; &#125; public function exportData(string $tableId, array $fields): string &#123; $table = new \dxkite\statistical\table\StatisticTable; // 列出同一个表格 $datas = $table-&gt;listWhere(['table_id' =&gt; $tableId]); // 生成表头 $csv = []; $csv[0] = [ 0 =&gt;'学号', 1 =&gt; '姓名']; // 表头ID $header = [0,1]; foreach ($fields as $id =&gt; $value) &#123; $csv[0][$id] = $value['name']; $header[] = $id; &#125; // 生成数据 foreach ($datas as $data) &#123; $id = count($csv); $csv[$id][0]= $data['student_id']; $csv[$id][1]= $data['name']; foreach ($data['data'] as $index =&gt; $value) &#123; $csv[$id][$index]=$value; &#125; &#125; $text = ''; foreach ($csv as $data) &#123; $row = []; foreach ($header as $id) &#123; $row[] = $data[$id]; &#125; $text .= implode(',', $row) . "\r\n"; &#125; return $text; &#125;&#125; 密码验证版本123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172&lt;?phpnamespace dxkite\statistical\response;use suda\core\Request;class DownloadResponse extends \suda\core\Response&#123; public function onRequest(Request $request) &#123; $tables = app()-&gt;getModuleConfig(app()-&gt;getFileModule(__FILE__), 'statistic'); $tableId = $request-&gt;get('table_id'); // 判断是否存在ID if (isset($tables[$tableId])) &#123; if (isset($tables[$tableId]['password'])) &#123; if ($request-&gt;get('password') == $tables[$tableId]['password']) &#123; $this-&gt;download($tableId, $tables[$tableId]['fields']); &#125; else &#123; echo '密码错误'; &#125; &#125; else &#123; $this-&gt;download($tableId, $tables[$tableId]['fields']); &#125; &#125; else &#123; // 显示404界面 hook()-&gt;exec('system:404'); &#125; &#125; public function download(string $tableId, array $fields) &#123; $data = $this-&gt;exportData($tableId, $fields); // 暂存文件 $path = RUNTIME_DIR .'/'. $tableId .'.csv'; storage()-&gt;put($path, $data); // 生成文件下载 $this-&gt;file($path); &#125; public function exportData(string $tableId, array $fields): string &#123; $table = new \dxkite\statistical\table\StatisticTable; // 列出同一个表格 $datas = $table-&gt;listWhere(['table_id' =&gt; $tableId]); // 生成表头 $csv = []; $csv[0] = [ 0 =&gt;'学号', 1 =&gt; '姓名']; // 表头ID $header = [0,1]; foreach ($fields as $id =&gt; $value) &#123; $csv[0][$id] = $value['name']; $header[] = $id; &#125; // 生成数据 foreach ($datas as $data) &#123; $id = count($csv); $csv[$id][0]= $data['student_id']; $csv[$id][1]= $data['name']; foreach ($data['data'] as $index =&gt; $value) &#123; $csv[$id][$index]=$value; &#125; &#125; $text = ''; foreach ($csv as $data) &#123; $row = []; foreach ($header as $id) &#123; $row[] = $data[$id]; &#125; $text .= implode(',', $row) . "\r\n"; &#125; return $text; &#125;&#125; 使用密码验证时需要设置密码 你所需要的下载姿势是./dev.php/table_id_1/download?password=密码 state.tpl.html该页面是为了显示 数据写入信息的123456789101112&lt;!DOCTYPE html&gt;&lt;html lang="en"&gt;&lt;head&gt; &lt;meta charset="UTF-8"&gt; &lt;meta name="viewport" content="width=device-width, initial-scale=1.0"&gt; &lt;meta http-equiv="X-UA-Compatible" content="ie=edge"&gt; &lt;title&gt;Action PAGE&lt;/title&gt;&lt;/head&gt;&lt;body&gt; &lt;P&gt;&#123;&#123; $:message &#125;&#125;&lt;/P&gt;&lt;/body&gt;&lt;/html&gt; 个人姿势为了方便在url传值 我对download.tpl.html、DownloadResponse.php进行了修改新增了： 输入框输入 密码提示 当前输入密码 download.tpl.html1234567891011121314151617181920&lt;!DOCTYPE html&gt;&lt;html lang="en"&gt;&lt;head&gt; &lt;meta charset="UTF-8"&gt; &lt;meta name="viewport" content="width=device-width, initial-scale=1.0"&gt; &lt;meta http-equiv="X-UA-Compatible" content="ie=edge"&gt; &lt;title&gt;Action PAGE&lt;/title&gt;&lt;/head&gt;&lt;body&gt; &lt;form action="@u" method="GET"&gt; Password:&lt;input type="password" name="password"&gt; &lt;input type="submit" value="Submit"&gt; &lt;/form&gt; &lt;div&gt; &lt;div&gt;下载密码: &#123;&#123; $:pwd &#125;&#125; &lt;/div&gt; &lt;div&gt;你的输入的密码: &#123;&#123; $:ypwd &#125;&#125;&lt;/div&gt; &lt;div&gt;当前情况: &#123;&#123; $:response &#125;&#125; &lt;/div&gt; &lt;/div&gt;&lt;/body&gt;&lt;/html&gt; DownloadResponse.php1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677787980818283&lt;?phpnamespace mobenw\statistical\response;use suda\core\Request;class DownloadResponse extends \suda\core\Response&#123; public function onRequest(Request $request) &#123; $tables = app()-&gt;getModuleConfig(app()-&gt;getFileModule(__FILE__), 'statistic'); $tableId = $request-&gt;get('table_id'); // 判断是否存在ID if (isset($tables[$tableId])) &#123; if (isset($tables[$tableId]['password'])) &#123; // 显示密码填写界面 $view = $this-&gt;page('download'); //设置页面变量 $view-&gt;set('pwd',$tables[$tableId]['password']); $view-&gt;set('ypwd',$request-&gt;get('password')); if ($request-&gt;get('password') == $tables[$tableId]['password']) &#123; $view-&gt;set('response','密码正确，请下载'); $this-&gt;download($tableId, $tables[$tableId]['fields']); &#125; else &#123; $view-&gt;set('response','密码错误'); &#125; // 渲染模板显示出来 $view-&gt;render(); &#125; else &#123; $this-&gt;download($tableId, $tables[$tableId]['fields']); &#125; &#125; else &#123; // 显示404界面 hook()-&gt;exec('system:404'); &#125; &#125; public function download(string $tableId, array $fields) &#123; $data = $this-&gt;exportData($tableId, $fields); // 暂存文件 $path = RUNTIME_DIR .'/'. $tableId .'.csv'; storage()-&gt;put($path, $data); // 生成文件下载 $this-&gt;file($path); &#125; public function exportData(string $tableId, array $fields): string &#123; $table = new \mobenw\statistical\table\StatisticTable; // 列出同一个表格 $datas = $table-&gt;listWhere(['table_id' =&gt; $tableId]); // 生成表头 $csv = []; $csv[0] = [ 0 =&gt;'学号', 1 =&gt; '姓名']; // 表头ID $header = [0,1]; foreach ($fields as $id =&gt; $value) &#123; $csv[0][$id] = $value['name']; $header[] = $id; &#125; // 生成数据 foreach ($datas as $data) &#123; $id = count($csv); $csv[$id][0]= $data['student_id']; $csv[$id][1]= $data['name']; foreach ($data['data'] as $index =&gt; $value) &#123; $csv[$id][$index]=$value; &#125; &#125; $text = ''; foreach ($csv as $data) &#123; $row = []; foreach ($header as $id) &#123; $row[] = $data[$id]; &#125; $text .= implode(',', $row) . "\r\n"; &#125; return $text; &#125;&#125; 后记基本教程应该就是这样了 不对 是心酸历程就是这样了这里附上会长大佬的链接https://dxkite.cn/2018/08/05/suda-results-statistical-design/https://dxkite.cn/2018/08/06/suda-results-statistical-router/https://dxkite.cn/2018/08/07/suda-results-statistical-data/]]></content>
      <categories>
        <category>Suda框架学习</category>
      </categories>
      <tags>
        <tag>Suda</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[或许你的手机上需要一个linux]]></title>
    <url>%2F2018%2F08%2F09%2FMaybe-your-mobile-phone-might-need-a-Linux%2F</url>
    <content type="text"><![CDATA[Termux 高级终端安装使用配置教程请看大佬文章！写的很好！我需要做的就是看和推广http://www.sqlsec.com/2018/05/termux.html#more]]></content>
      <tags>
        <tag>安装与配置</tag>
        <tag>小配件</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[你的clicklove小爱心正在路上]]></title>
    <url>%2F2018%2F08%2F07%2FYour-clicklove-is-on-the-way%2F</url>
    <content type="text"><![CDATA[非原创，文章出处：https://asdfv1929.github.io/2018/01/26/click-love/ 毕竟还是萌新 需要借鉴各路大佬的知识 小❤❤创建一个js文件在\themes\next\source\js\src下新建文件clicklove.js代码如下： 123456789101112131415161718192021222324252627282930313233343536373839404142434445! function (e, t, a) &#123; function n() &#123; c(".heart&#123;width: 10px;height: 10px;position: fixed;background: #f00;transform: rotate(45deg);-webkit-transform: rotate(45deg);-moz-transform: rotate(45deg);&#125;.heart:after,.heart:before&#123;content: '';width: inherit;height: inherit;background: inherit;border-radius: 50%;-webkit-border-radius: 50%;-moz-border-radius: 50%;position: fixed;&#125;.heart:after&#123;top: -5px;&#125;.heart:before&#123;left: -5px;&#125;"), o(), r() &#125; function r() &#123; for (var e = 0; e &lt; d.length; e++) d[e].alpha &lt;= 0 ? (t.body.removeChild(d[e].el), d.splice(e, 1)) : (d[e].y--, d[e].scale += .004, d[e].alpha -= .013, d[e].el.style.cssText = "left:" + d[e].x + "px;top:" + d[e].y + "px;opacity:" + d[e].alpha + ";transform:scale(" + d[e].scale + "," + d[e].scale + ") rotate(45deg);background:" + d[e].color + ";z-index:99999"); requestAnimationFrame(r) &#125; function o() &#123; var t = "function" == typeof e.onclick &amp;&amp; e.onclick; e.onclick = function (e) &#123; t &amp;&amp; t(), i(e) &#125; &#125; function i(e) &#123; var a = t.createElement("div"); a.className = "heart", d.push(&#123; el: a, x: e.clientX - 5, y: e.clientY - 5, scale: 1, alpha: 1, color: s() &#125;), t.body.appendChild(a) &#125; function c(e) &#123; var a = t.createElement("style"); a.type = "text/css"; try &#123; a.appendChild(t.createTextNode(e)) &#125; catch (t) &#123; a.styleSheet.cssText = e &#125; t.getElementsByTagName("head")[0].appendChild(a) &#125; function s() &#123; return "rgb(" + ~~ (255 * Math.random()) + "," + ~~ (255 * Math.random()) + "," + ~~ (255 * Math.random()) + ")" &#125; var d = []; e.requestAnimationFrame = function () &#123; return e.requestAnimationFrame || e.webkitRequestAnimationFrame || e.mozRequestAnimationFrame || e.oRequestAnimationFrame || e.msRequestAnimationFrame || function (e) &#123; setTimeout(e, 1e3 / 60) &#125; &#125;(), n()&#125;(window, document); 修改_layout.swig在\themes\next\layout\_layout.swig文件末尾添加以下代码(纳闷了 为啥放哪都行 神奇的script 不过建议放后面 不然有bug)12&lt;!-- 页面点击小红心 --&gt;&lt;script type="text/javascript" src="/js/src/clicklove.js"&gt;&lt;/script&gt; 爆炸效果创建一个js文件同上fireworks.jsuse strict";function updateCoords(e) &#123; pointerX = (e.clientX || e.touches[0].clientX) - canvasEl.getBoundingClientRect().left, pointerY = e.clientY || e.touches[0].clientY - canvasEl.getBoundingClientRect().top&#125;function setParticuleDirection(e) &#123; var t = anime.random(0, 360) * Math.PI / 180, a = anime.random(50, 180), n = [ - 1, 1][anime.random(0, 1)] * a; return &#123; x: e.x + n * Math.cos(t), y: e.y + n * Math.sin(t) &#125;&#125;function createParticule(e, t) &#123; var a = &#123;&#125;; return a.x = e, a.y = t, a.color = colors[anime.random(0, colors.length - 1)], a.radius = anime.random(16, 32), a.endPos = setParticuleDirection(a), a.draw = function() &#123; ctx.beginPath(), ctx.arc(a.x, a.y, a.radius, 0, 2 * Math.PI, !0), ctx.fillStyle = a.color, ctx.fill() &#125;, a&#125;function createCircle(e, t) &#123; var a = &#123;&#125;; return a.x = e, a.y = t, a.color = "#F00", a.radius = 0.1, a.alpha = 0.5, a.lineWidth = 6, a.draw = function() &#123; ctx.globalAlpha = a.alpha, ctx.beginPath(), ctx.arc(a.x, a.y, a.radius, 0, 2 * Math.PI, !0), ctx.lineWidth = a.lineWidth, ctx.strokeStyle = a.color, ctx.stroke(), ctx.globalAlpha = 1 &#125;, a&#125;function renderParticule(e) &#123; for (var t = 0; t &lt; e.animatables.length; t++) &#123; e.animatables[t].target.draw() &#125;&#125;function animateParticules(e, t) &#123; for (var a = createCircle(e, t), n = [], i = 0; i &lt; numberOfParticules; i++) &#123; n.push(createParticule(e, t)) &#125; anime.timeline().add(&#123; targets: n, x: function(e) &#123; return e.endPos.x &#125;, y: function(e) &#123; return e.endPos.y &#125;, radius: 0.1, duration: anime.random(1200, 1800), easing: "easeOutExpo", update: renderParticule &#125;).add(&#123; targets: a, radius: anime.random(80, 160), lineWidth: 0, alpha: &#123; value: 0, easing: "linear", duration: anime.random(600, 800) &#125;, duration: anime.random(1200, 1800), easing: "easeOutExpo", update: renderParticule, offset: 0 &#125;)&#125;function debounce(e, t) &#123; var a; return function() &#123; var n = this, i = arguments; clearTimeout(a), a = setTimeout(function() &#123; e.apply(n, i) &#125;, t) &#125;&#125;var canvasEl = document.querySelector(".fireworks");if (canvasEl) &#123; var ctx = canvasEl.getContext("2d"), numberOfParticules = 30, pointerX = 0, pointerY = 0, tap = "mousedown", colors = ["#FF1461", "#18FF92", "#5A87FF", "#FBF38C"], setCanvasSize = debounce(function() &#123; canvasEl.width = 2 * window.innerWidth, canvasEl.height = 2 * window.innerHeight, canvasEl.style.width = window.innerWidth + "px", canvasEl.style.height = window.innerHeight + "px", canvasEl.getContext("2d").scale(2, 2) &#125;, 500), render = anime(&#123; duration: 1 / 0, update: function() &#123; ctx.clearRect(0, 0, canvasEl.width, canvasEl.height) &#125; &#125;); document.addEventListener(tap, function(e) &#123; "sidebar" !== e.target.id &amp;&amp; "toggle-sidebar" !== e.target.id &amp;&amp; "A" !== e.target.nodeName &amp;&amp; "IMG" !== e.target.nodeName &amp;&amp; (render.play(), updateCoords(e), animateParticules(pointerX, pointerY)) &#125;, !1), setCanvasSize(), window.addEventListener("resize", setCanvasSize, !1)&#125;"use strict";function updateCoords(e) &#123; pointerX = (e.clientX || e.touches[0].clientX) - canvasEl.getBoundingClientRect().left, pointerY = e.clientY || e.touches[0].clientY - canvasEl.getBoundingClientRect().top&#125;function setParticuleDirection(e) &#123; var t = anime.random(0, 360) * Math.PI / 180, a = anime.random(50, 180), n = [ - 1, 1][anime.random(0, 1)] * a; return &#123; x: e.x + n * Math.cos(t), y: e.y + n * Math.sin(t) &#125;&#125;function createParticule(e, t) &#123; var a = &#123;&#125;; return a.x = e, a.y = t, a.color = colors[anime.random(0, colors.length - 1)], a.radius = anime.random(16, 32), a.endPos = setParticuleDirection(a), a.draw = function() &#123; ctx.beginPath(), ctx.arc(a.x, a.y, a.radius, 0, 2 * Math.PI, !0), ctx.fillStyle = a.color, ctx.fill() &#125;, a&#125;function createCircle(e, t) &#123; var a = &#123;&#125;; return a.x = e, a.y = t, a.color = "#F00", a.radius = 0.1, a.alpha = 0.5, a.lineWidth = 6, a.draw = function() &#123; ctx.globalAlpha = a.alpha, ctx.beginPath(), ctx.arc(a.x, a.y, a.radius, 0, 2 * Math.PI, !0), ctx.lineWidth = a.lineWidth, ctx.strokeStyle = a.color, ctx.stroke(), ctx.globalAlpha = 1 &#125;, a&#125;function renderParticule(e) &#123; for (var t = 0; t &lt; e.animatables.length; t++) &#123; e.animatables[t].target.draw() &#125;&#125;function animateParticules(e, t) &#123; for (var a = createCircle(e, t), n = [], i = 0; i &lt; numberOfParticules; i++) &#123; n.push(createParticule(e, t)) &#125; anime.timeline().add(&#123; targets: n, x: function(e) &#123; return e.endPos.x &#125;, y: function(e) &#123; return e.endPos.y &#125;, radius: 0.1, duration: anime.random(1200, 1800), easing: "easeOutExpo", update: renderParticule &#125;).add(&#123; targets: a, radius: anime.random(80, 160), lineWidth: 0, alpha: &#123; value: 0, easing: "linear", duration: anime.random(600, 800) &#125;, duration: anime.random(1200, 1800), easing: "easeOutExpo", update: renderParticule, offset: 0 &#125;)&#125;function debounce(e, t) &#123; var a; return function() &#123; var n = this, i = arguments; clearTimeout(a), a = setTimeout(function() &#123; e.apply(n, i) &#125;, t) &#125;&#125;var canvasEl = document.querySelector(".fireworks");if (canvasEl) &#123; var ctx = canvasEl.getContext("2d"), numberOfParticules = 30, pointerX = 0, pointerY = 0, tap = "mousedown", colors = ["#FF1461", "#18FF92", "#5A87FF", "#FBF38C"], setCanvasSize = debounce(function() &#123; canvasEl.width = 2 * window.innerWidth, canvasEl.height = 2 * window.innerHeight, canvasEl.style.width = window.innerWidth + "px", canvasEl.style.height = window.innerHeight + "px", canvasEl.getContext("2d").scale(2, 2) &#125;, 500), render = anime(&#123; duration: 1 / 0, update: function() &#123; ctx.clearRect(0, 0, canvasEl.width, canvasEl.height) &#125; &#125;); document.addEventListener(tap, function(e) &#123; "sidebar" !== e.target.id &amp;&amp; "toggle-sidebar" !== e.target.id &amp;&amp; "A" !== e.target.nodeName &amp;&amp; "IMG" !== e.target.nodeName &amp;&amp; (render.play(), updateCoords(e), animateParticules(pointerX, pointerY)) &#125;, !1), setCanvasSize(), window.addEventListener("resize", setCanvasSize, !1)&#125;; 修改_layout.swig同上12345&#123;% if theme.fireworks %&#125; &lt;canvas class="fireworks" style="position: fixed;left: 0;top: 0;z-index: 1; pointer-events: none;" &gt;&lt;/canvas&gt; &lt;script type="text/javascript" src="//cdn.bootcss.com/animejs/2.2.0/anime.min.js"&gt;&lt;/script&gt; &lt;script type="text/javascript" src="/js/src/fireworks.js"&gt;&lt;/script&gt;&#123;% endif %&#125; 主题配置路径\themes\next\_config.yml12# Fireworksfireworks: true]]></content>
      <categories>
        <category>博客搭建</category>
      </categories>
      <tags>
        <tag>安装与配置</tag>
        <tag>Hexo</tag>
        <tag>NexT</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[使用GitHub和Hexo搭建自己的博客]]></title>
    <url>%2F2018%2F08%2F06%2FBuild-your-own-blog-with-GitHub-and-Hexo%2F</url>
    <content type="text"><![CDATA[我这里选用的是GitHub.io以及Hexo来搭建自己的博客的 配置必备 gitnode.js git的安装 Git是一个开源的分布式版本控制系统，用于敏捷高效地处理任何或小或大的项目。Git 是 Linus Torvalds 为了帮助管理 Linux 内核开发而开发的一个开放源码的版本控制软件。Git 与常用的版本控制工具 CVS, Subversion 等不同，它采用了分布式版本库的方式，不必服务器端软件支持 无需多讲，一路默认 node.js的安装 简单的说 Node.js 就是运行在服务端的 JavaScript。Node.js 是一个基于Chrome JavaScript 运行时建立的一个平台。Node.js是一个事件驱动I/O服务端JavaScript环境，基于Google的V8引擎，V8引擎执行Javascript的速度非常快，性能非常好。 操作空间不大，一路默认 正式开始安装 Hexo进入命令行 输入命令 npm install -g hexo 顺便把这个也安装一下 自动部署发布工具 npm install hexo-deployer-git --save 初始化 Hexo选择你博客存放的位置 (建议创建一个新的文件夹_初始化需要一个空的文件夹)然后命令行输入命令 hexo init git主题本身自带主题 可以暂时跳过该操作 若需要更换主题时再进行操作 此处以我使用的主题为例进入你的 themes目录 命令行输入命令 git clone https://github.com/iissnan/hexo-theme-next.git 主题下载后需要进行以下操作才能更换根目录下的 _config.yml修改 xxxxx为你的主题名 ps.注意有空格themes: XXXXX 本地浏览博客命令行输入命令 12hexo ghexo s hexo g 生成hexo s 启动服务预览 在浏览器输入：localhost:4000 就可以进行访问Ctrl+C 即可退出 写文章根目录下命令行 输入命令1hexo new &apos;文章名字&apos; 在source目下的 _posts目录下 会出现 .md文件以下为一般完整内容 1234567title: postName #文章页面上的显示名称，一般是中文date: 2013-12-02 15:30:16 #文章生成时间，一般不改，当然也可以任意修改categories: 默认分类 #分类tags: [tag1,tag2,tag3] #文章标签，可空，多标签请用格式，注意:后面有个空格description: 附加一段文章摘要，字数最好在140字以内，会出现在meta的description里面---以下文章是正文 上传到GitHub上 首先你得有GitHub账号然后你创建了一个仓库为 用户名.gitHub.iossh密钥自己配好 根目录下 _config.yml文件内把你的git写进去 现在写的是我的 替换一下就ok了 123deploy: type: git repo: git@github.com:MoBenw/MoBenw.github.io.git 满足以上条件命令行 输入命令 hexo clean &amp;&amp; hexo g &amp;&amp; hexo d hexo clean 清理缓存hexo g 生成hexo d 部署 使用你的GitHub.io访问到这里你就基本上会基本的GitHub上Hexo的博客搭建了 (感觉语句不通 不管了) 有关于README.md 在 source目录下 创建一个 README.md 文件 里面是你要写的内容进入根目录 打开配置文件 _config.yml修改 跳过渲染内容skip_render: README.md]]></content>
      <categories>
        <category>博客搭建</category>
      </categories>
      <tags>
        <tag>安装与配置</tag>
        <tag>Hexo</tag>
        <tag>NexT</tag>
      </tags>
  </entry>
</search>
